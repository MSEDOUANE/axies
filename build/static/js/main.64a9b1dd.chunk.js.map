{"version":3,"sources":["logo.svg","axies.js","App.js","reportWebVitals.js","index.js"],"names":["classGeneMap","geneColorMap","PROBABILITIES","parts","MAX_QUALITY","axies","bodyPartsMap","convert","data","opts","fields","value","label","csv","parse","downloadLink","document","createElement","blob","Blob","url","URL","createObjectURL","href","text","download","body","appendChild","click","remove","flatten","result","recurse","cur","prop","Object","Array","isArray","i","l","length","isEmpty","p","getAxieBriefListTotal","address","page","sort","auctionType","criteria","bodyParts","a","from","formattedAddress","fetch","JSON","stringify","then","response","json","total","getAxieBriefList","bp","inc","getBodyParts","results","flattenAxies","axie","id","stage","genes","genesToBin","BigInt","traits","getTraits","qp","getQualityAndPureness","class","toLowerCase","quality","pureness","forEach","e","push","console","log","slice","catch","error","r","genesString","toString","str","num","s","strMul","group","groups","cls","bin","getClassFromGroup","region","regionBin","regionGeneMap","getRegionFromGroup","pattern","d","r1","r2","color","getColor","getColorsFromGroup","eyes","getPartsFromGroup","mouth","ears","horn","back","tail","partsClassMap","getPartName","part","binary","trait","skinBinary","binarytraits","mystic","dName","r1Name","r2Name","getPartFromName","traitType","partName","traitId","replace","partId","dPureness","App","useState","setCriteria","progress","setProgress","setTotal","classes","checked","useEffect","getAxiesExcel","axiesList","trim","totalAxies","totalPages","Math","ceil","currentAxie","undefined","className","Container","Row","Col","sm","Tabs","defaultActiveKey","Tab","eventKey","title","Accordion","Item","Header","Body","map","InputGroup","Checkbox","onChange","ev","target","aria-label","Text","name","disabled","onClick","v","ProgressBar","now","max","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.64a9b1dd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* global BigInt */\n\nimport _, { forEach } from 'lodash';\nimport bodyParts from \"./body-parts.json\";\nimport binarytraits from \"./traitmapping.json\";\nimport fetch from 'node-fetch';\nimport { parse } from 'json2csv';\n\nconst observerConfig = { attributes: false, childList: true, subtree: true };\nconst colorMap = {\n\t\"plant\": \"rgb(108, 192, 0)\",\n\t\"reptile\": \"rgb(200, 138, 224)\",\n\t\"beast\": \"rgb(255, 184, 18)\",\n\t\"aquatic\": \"rgb(0, 184, 206)\",\n\t\"bird\": \"rgb(255, 139, 189)\",\n\t\"bug\": \"rgb(255, 83, 65)\"\n}\nconst classGeneMap = { \"0000\": \"beast\", \"0001\": \"bug\", \"0010\": \"bird\", \"0011\": \"plant\", \"0100\": \"aquatic\", \"0101\": \"reptile\", \"1000\": \"???\", \"1001\": \"???\", \"1010\": \"???\" };\nconst typeOrder = { \"patternColor\": 1, \"eyes\": 2, \"mouth\": 3, \"ears\": 4, \"horn\": 5, \"back\": 6, \"tail\": 7 };\nconst geneColorMap = {\n\t\"0000\": { \"0010\": \"ffec51\", \"0011\": \"ffa12a\", \"0100\": \"f0c66e\", \"0110\": \"60afce\" },\n\t\"0001\": { \"0010\": \"ff7183\", \"0011\": \"ff6d61\", \"0100\": \"f74e4e\", },\n\t\"0010\": { \"0010\": \"ff9ab8\", \"0011\": \"ffb4bb\", \"0100\": \"ff778e\" },\n\t\"0011\": { \"0010\": \"ccef5e\", \"0011\": \"efd636\", \"0100\": \"c5ffd9\" },\n\t\"0100\": { \"0010\": \"4cffdf\", \"0011\": \"2de8f2\", \"0100\": \"759edb\", \"0110\": \"ff5a71\" },\n\t\"0101\": { \"0010\": \"fdbcff\", \"0011\": \"ef93ff\", \"0100\": \"f5e1ff\", \"0110\": \"43e27d\" },\n\t//nut hidden_1\n\t\"1000\": { \"0010\": \"D9D9D9\", \"0011\": \"D9D9D9\", \"0100\": \"D9D9D9\", \"0110\": \"D9D9D9\" },\n\t//star hidden_2\n\t\"1001\": { \"0010\": \"D9D9D9\", \"0011\": \"D9D9D9\", \"0100\": \"D9D9D9\", \"0110\": \"D9D9D9\" },\n\t//moon hidden_3\n\t\"1010\": { \"0010\": \"D9D9D9\", \"0011\": \"D9D9D9\", \"0100\": \"D9D9D9\", \"0110\": \"D9D9D9\" }\n};\nconst PROBABILITIES = { d: 0.375, r1: 0.09375, r2: 0.03125 };\nconst parts = [\"eyes\", \"mouth\", \"ears\", \"horn\", \"back\", \"tail\"];\nconst MAX_QUALITY = 6 * (PROBABILITIES.d + PROBABILITIES.r1 + PROBABILITIES.r2);\nconst MAX_RUN_RETRIES = 30;\nconst OPTIONS_MAP = { \"class\": \"classes\", \"part\": \"parts\", \"bodyShape\": \"bodyShapes\", \"stage\": \"stages\", \"mystic\": \"numMystic\" };\nconst SEARCH_PARAMS = [\"class\", \"stage\", \"breedCount\", \"mystic\", \"pureness\", \"region\", \"title\", \"part\", \"bodyShape\", \"hp\", \"speed\", \"skill\", \"morale\"];\nvar axies = {}, totalAxies = 0, axiesList = [];\nvar bodyPartsMap = {};\n\nexport var convert = function (data)\n{\n\n\tconst fields = ['id',\n\t\t'class',\n\t\t'name',\n\t\t'class',\n\t\t'stage',\n\t\t'breedCount',\n\t\t{ value: 'auction.currentPriceUSD', label: 'price' },\n\t\t{ value: 'traits.eyes.d.name', label: \"D-EYES\" },\n\t\t{ value: 'traits.eyes.r1.name', label: \"R1-EYES\" },\n\t\t{ value: 'traits.eyes.r2.name', label: \"R2-EYES\" },\n\t\t{ value: 'traits.ears.d.name', label: \"D-Ears\" },\n\t\t{ value: 'traits.ears.r1.name', label: \"R1-Ears\" },\n\t\t{ value: 'traits.ears.r2.name', label: \"R2-Ears\" },\n\t\t{ value: 'traits.back.d.name', label: \"D-Back\" },\n\t\t{ value: 'traits.back.r1.name', label: \"R1-Back\" },\n\t\t{ value: 'traits.back.r2.name', label: \"R2-Back\" },\n\t\t{ value: 'traits.mouth.d.name', label: \"D-Mouth\" },\n\t\t{ value: 'traits.mouth.r1.name', label: \"R1-Mouth\" },\n\t\t{ value: 'traits.mouth.r2.name', label: \"R2-Mouth\" },\n\t\t{ value: 'traits.horn.d.name', label: \"D-Horn\" },\n\t\t{ value: 'traits.horn.r1.name', label: \"R1-Horn\" },\n\t\t{ value: 'traits.horn.r2.name', label: \"R2-Horn\" },\n\t\t{ value: 'traits.tail.d.name', label: \"D-Tail\" },\n\t\t{ value: 'traits.tail.r1.name', label: \"R1-Tail\" },\n\t\t{ value: 'traits.tail.r2.name', label: \"R2-Tail\" },\n\t\t{ value: 'stats.hp', label: \"Health\" },\n\t\t{ value: 'stats.skill', label: \"Skill\" },\n\t\t{ value: 'stats.morale', label: \"Morale\" },\n\t\t{ value: 'stats.speed', label: \"Speed\" },\n\t];\n\tconst opts = { fields };\n\tvar csv = parse(data, opts);\n\t// Lodash, currently included vi©a a script, is required for this line to work\n\tvar downloadLink = document.createElement(\"a\");\n\tvar blob = new Blob([\"\\ufeff\", csv]);\n\tvar url = URL.createObjectURL(blob);\n\tdownloadLink.href = url;\n\tdownloadLink.text = \"click\"\n\tdownloadLink.download = \"DataDump.csv\";  //Name the file here\n\tdocument.body.appendChild(downloadLink);\n\tdownloadLink.click();\n\tdownloadLink.remove();\n\treturn csv;\n\t// var xls = json2xls(data);\n\t// fs.writeFileSync(filename, xls, 'binary', (err) =>\n\t// {\n\t//     if (err)\n\t//     {\n\t//         console.log(\"writeFileSync :\", err);\n\t//     }\n\t//     console.log(filename + \" file is saved!\");\n\t// });\n}\n\nfunction flatten(data)\n{\n\tvar result = {};\n\tfunction recurse(cur, prop)\n\t{\n\t\tif (Object(cur) !== cur)\n\t\t{\n\t\t\tresult[prop] = cur;\n\t\t} else if (Array.isArray(cur))\n\t\t{\n\t\t\tfor (var i = 0, l = cur.length; i < l; i++)\n\t\t\t{\n\t\t\t\trecurse(cur[i], prop + \"/\" + i + \"/\");\n\t\t\t}\n\t\t\tif (l == 0)\n\t\t\t\tresult[prop] = [];\n\t\t} else\n\t\t{\n\t\t\tvar isEmpty = true;\n\t\t\tfor (var p in cur)\n\t\t\t{\n\t\t\t\tisEmpty = false;\n\t\t\t\trecurse(cur[p], prop ? prop + \".\" + p : p);\n\t\t\t}\n\t\t\tif (isEmpty && prop)\n\t\t\t\tresult[prop] = {};\n\t\t}\n\t}\n\trecurse(data, \"\");\n\treturn result;\n}\n\n\n\n\nexport async function getAxieBriefListTotal(address, page, sort, auctionType, criteria, bodyParts)\n{\n\t//Assume we are at 24 axies per page\n\tif (page < 1) page = 1;\n\tlet from = (page - 1) * 100;\n\tlet formattedAddress = address;\n\tif (formattedAddress != null)\n\t{\n\t\tformattedAddress = \"\\\"\" + address + \"\\\"\";\n\t}\n\n\treturn await fetch(\"https://axieinfinity.com/graphql-server-v2/graphql?r=freak\", {\n\t\t\"headers\": { \"content-type\": \"application/json\" },\n\t\t\"body\": \"{\\\"operationName\\\":\\\"GetAxieBriefList\\\",\\\"variables\\\":{\\\"from\\\":\" + from + \",\\\"size\\\":100,\\\"sort\\\":\\\"\" + sort + \"\\\",\\\"auctionType\\\":\\\"\" + auctionType + \"\\\",\\\"owner\\\":\" + formattedAddress + \",\\\"criteria\\\":\" + JSON.stringify(criteria) + \"},\\\"query\\\":\\\"query GetAxieBriefList($auctionType: AuctionType, $criteria: AxieSearchCriteria, $from: Int, $sort: SortBy, $size: Int, $owner: String) {\\\\n  axies(auctionType: $auctionType, criteria: $criteria, from: $from, sort: $sort, size: $size, owner: $owner) {\\\\n    total\\\\n    results {\\\\n      ...AxieBrief\\\\n      __typename\\\\n    }\\\\n    __typename\\\\n  }\\\\n}\\\\n\\\\nfragment AxieBrief on Axie {\\\\n  id\\\\n  genes\\\\n  owner\\\\n  name\\\\n  stage\\\\n  class\\\\n  breedCount\\\\n  image\\\\n  title\\\\n  stats {\\\\n    ...AxieStats\\\\n    __typename\\\\n  }\\\\n  battleInfo {\\\\n    banned\\\\n    __typename\\\\n  }\\\\n  auction {\\\\n    currentPrice\\\\n    currentPriceUSD\\\\n    __typename\\\\n  }\\\\n  parts {\\\\n    id\\\\n    name\\\\n    class\\\\n    type\\\\n    specialGenes\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\nfragment AxieStats on AxieStats {\\\\n  hp\\\\n  speed\\\\n  skill\\\\n  morale\\\\n  __typename\\\\n}\\\\n\\\\n\\\"}\",\n\t\t\"method\": \"POST\"\n\t})\n\t\t.then(response =>\n\t\t{\n\t\t\treturn response.json();\n\t\t}).then(result =>\n\t\t{\n\t\t\ttotalAxies = result.data.axies.total;\n\t\t\treturn totalAxies;\n\t\t});\n\n}\n\n\nexport async function getAxieBriefList(address, page, sort, auctionType, criteria, bp)\n{\n\t//Assume we are at 24 axies per page\n\tif (page < 1) page = 1;\n\tlet from = (page - 1) * 100;\n\tlet formattedAddress = address;\n\tif (formattedAddress != null)\n\t{\n\t\tformattedAddress = \"\\\"\" + address + \"\\\"\";\n\t}\n\tvar inc=0;\n\tbodyPartsMap = await getBodyParts();\n\tlet r = await fetch(\"https://axieinfinity.com/graphql-server-v2/graphql?r=freak\", {\n\t\t\"headers\": { \"content-type\": \"application/json\" },\n\t\t\"body\": \"{\\\"operationName\\\":\\\"GetAxieBriefList\\\",\\\"variables\\\":{\\\"from\\\":\" + from + \",\\\"size\\\":100,\\\"sort\\\":\\\"\" + sort + \"\\\",\\\"auctionType\\\":\\\"\" + auctionType + \"\\\",\\\"owner\\\":\" + formattedAddress + \",\\\"criteria\\\":\" + JSON.stringify(criteria) + \"},\\\"query\\\":\\\"query GetAxieBriefList($auctionType: AuctionType, $criteria: AxieSearchCriteria, $from: Int, $sort: SortBy, $size: Int, $owner: String) {\\\\n  axies(auctionType: $auctionType, criteria: $criteria, from: $from, sort: $sort, size: $size, owner: $owner) {\\\\n    total\\\\n    results {\\\\n      ...AxieBrief\\\\n      __typename\\\\n    }\\\\n    __typename\\\\n  }\\\\n}\\\\n\\\\nfragment AxieBrief on Axie {\\\\n  id\\\\n  genes\\\\n  owner\\\\n  name\\\\n  stage\\\\n  class\\\\n  breedCount\\\\n  image\\\\n  title\\\\n  stats {\\\\n    ...AxieStats\\\\n    __typename\\\\n  }\\\\n  battleInfo {\\\\n    banned\\\\n    __typename\\\\n  }\\\\n  auction {\\\\n    currentPrice\\\\n    currentPriceUSD\\\\n    __typename\\\\n  }\\\\n  parts {\\\\n    id\\\\n    name\\\\n    class\\\\n    type\\\\n    specialGenes\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\nfragment AxieStats on AxieStats {\\\\n  hp\\\\n  speed\\\\n  skill\\\\n  morale\\\\n  __typename\\\\n}\\\\n\\\\n\\\"}\",\n\t\t\"method\": \"POST\"\n\t})\n\t\t.then(response =>\n\t\t{\n\t\t\treturn response.json();\n\t\t}).then(result =>\n\t\t{\n\t\t\tlet results = result.data.axies.results, flattenAxiesaxies = [], flattenAxies = [];\n\t\t\tfor (let i = 0; i < results.length; i++)\n\t\t\t{\n\t\t\t\tlet axie = results[i];\n\t\t\t\tlet id = axie.id;\n\t\t\t\taxies[id] = axie;\n\t\t\t\tif (axie.stage > 2)\n\t\t\t\t{\n\t\t\t\t\taxies[id].genes = genesToBin(BigInt(axies[id].genes));\n\t\t\t\t\tlet traits = getTraits(axies[id].genes);\n\t\t\t\t\tlet qp = getQualityAndPureness(traits, axies[id].class?.toLowerCase());\n\t\t\t\t\taxies[id].traits = traits;\n\t\t\t\t\taxies[id].quality = qp.quality;\n\t\t\t\t\taxies[id].pureness = qp.pureness;\n\t\t\t\t}\n\t\t\t\tinc++;\n\t\t\t}\n\t\t\tresults.forEach(e =>\n\t\t\t{\n\t\t\t\tflattenAxies.push(flatten(e));\n\t\t\t});\n\t\t\tconsole.log(JSON.stringify(flattenAxies.slice(2)));\n\t\t\treturn flattenAxies;\n\t\t})\n\t\t.catch(error =>\n\t\t{\n\t\t\tconsole.log(error,inc);\n\t\t});\n\treturn r;\n}\nfunction genesToBin(genes)\n{\n\tvar genesString = genes.toString(2);\n\tgenesString = strMul(\"0\", 256 - genesString.length) + genesString\n\treturn genesString;\n}\nfunction getTraits(genes)\n{\n\tvar groups = [genes.slice(0, 32), genes.slice(32, 64), genes.slice(64, 96), genes.slice(96, 128), genes.slice(128, 160), genes.slice(160, 192), genes.slice(192, 224), genes.slice(224, 256)];\n\tlet cls = getClassFromGroup(groups[0]);\n\tlet region = getRegionFromGroup(groups[0]);\n\tlet pattern = getPatternsFromGroup(groups[1]);\n\tlet color = getColorsFromGroup(groups[1], groups[0].slice(0, 4));\n\tlet eyes = getPartsFromGroup(\"eyes\", groups[2], region);\n\tlet mouth = getPartsFromGroup(\"mouth\", groups[3], region);\n\tlet ears = getPartsFromGroup(\"ears\", groups[4], region);\n\tlet horn = getPartsFromGroup(\"horn\", groups[5], region);\n\tlet back = getPartsFromGroup(\"back\", groups[6], region);\n\tlet tail = getPartsFromGroup(\"tail\", groups[7], region);\n\treturn { cls: cls, region: region, pattern: pattern, color: color, eyes: eyes, mouth: mouth, ears: ears, horn: horn, back: back, tail: tail };\n}\nconst regionGeneMap = { \"00000\": \"global\", \"00001\": \"japan\" };\nfunction getRegionFromGroup(group)\n{\n\tlet regionBin = group.slice(8, 13);\n\tif (regionBin in regionGeneMap)\n\t{\n\t\treturn regionGeneMap[regionBin];\n\t}\n\treturn \"Unknown Region\";\n}\n\nfunction getClassFromGroup(group)\n{\n\tlet bin = group.slice(0, 4);\n\tif (!(bin in classGeneMap))\n\t{\n\t\treturn \"Unknown Class\";\n\t}\n\treturn classGeneMap[bin];\n}\n\nfunction getPatternsFromGroup(group)\n{\n\t//patterns could be 6 bits. use 4 for now\n\treturn { d: group.slice(2, 8), r1: group.slice(8, 14), r2: group.slice(14, 20) };\n}\n\nfunction getColor(bin, cls)\n{\n\tlet color;\n\tif (bin == \"0000\")\n\t{\n\t\tcolor = \"ffffff\";\n\t} else if (bin == \"0001\")\n\t{\n\t\tcolor = \"7a6767\";\n\t} else\n\t{\n\t\tcolor = geneColorMap[cls][bin];\n\t}\n\treturn color;\n}\n\nfunction getColorsFromGroup(group, cls)\n{\n\treturn { d: getColor(group.slice(20, 24), cls), r1: getColor(group.slice(24, 28), cls), r2: getColor(group.slice(28, 32), cls) };\n}\n\n//hack. key: part name + \" \" + part type\nvar partsClassMap = {};\nfunction getPartName(cls, part, region, binary, skinBinary = \"00\")\n{\n\tlet trait;\n\tif (binary in binarytraits[cls][part])\n\t{\n\t\tif (skinBinary == \"11\")\n\t\t{\n\t\t\ttrait = binarytraits[cls][part][binary][\"mystic\"];\n\t\t} else if (skinBinary == \"10\")\n\t\t{\n\t\t\ttrait = binarytraits[cls][part][binary][\"xmas\"];\n\t\t} else if (region in binarytraits[cls][part][binary])\n\t\t{\n\t\t\ttrait = binarytraits[cls][part][binary][region];\n\t\t} else if (\"global\" in binarytraits[cls][part][binary])\n\t\t{\n\t\t\ttrait = binarytraits[cls][part][binary][\"global\"];\n\t\t} else\n\t\t{\n\t\t\ttrait = \"UNKNOWN Regional \" + cls + \" \" + part;\n\t\t}\n\t} else\n\t{\n\t\ttrait = \"UNKNOWN \" + cls + \" \" + part;\n\t}\n\t//return part + \"-\" + trait.toLowerCase().replace(/\\s/g, \"-\");\n\tpartsClassMap[trait + \" \" + part] = cls;\n\treturn trait;\n}\n\nfunction getPartsFromGroup(part, group, region,)\n{\n\tlet skinBinary = group.slice(0, 2);\n\tlet mystic = skinBinary == \"11\";\n\tlet dClass = classGeneMap[group.slice(2, 6)];\n\tlet dBin = group.slice(6, 12);\n\tlet dName = getPartName(dClass, part, region, dBin, skinBinary);\n\n\tlet r1Class = classGeneMap[group.slice(12, 16)];\n\tlet r1Bin = group.slice(16, 22);\n\tlet r1Name = getPartName(r1Class, part, region, r1Bin);\n\n\tlet r2Class = classGeneMap[group.slice(22, 26)];\n\tlet r2Bin = group.slice(26, 32);\n\tlet r2Name = getPartName(r2Class, part, region, r2Bin);\n\n\treturn { d: getPartFromName(part, dName), r1: getPartFromName(part, r1Name), r2: getPartFromName(part, r2Name), mystic: mystic };\n}\nfunction getPartFromName(traitType, partName)\n{\n\tlet traitId = traitType.toLowerCase() + \"-\" + partName.toLowerCase().replace(/\\s/g, \"-\").replace(/[\\?'\\.]/g, \"\");\n\tvar part =bodyPartsMap[traitId];\n\treturn part;\n}\n\nexport async function getBodyParts()\n{\n\n\tconsole.log(\"Failed to get body parts from the API\");\n\t//API is unreliable. fall back to hard-coded local copy.\n\tlet parts = bodyParts;\n\tfor (let i in parts)\n\t{\n\t\tbodyPartsMap[parts[i].partId] = parts[i];\n\t}\n\n\treturn bodyPartsMap;\n}\n\nfunction getQualityAndPureness(traits, cls)\n{\n\tlet quality = 0;\n\tlet dPureness = 0;\n\tfor (let i in parts)\n\t{\n\t\tif (traits[parts[i]].d.class == cls)\n\t\t{\n\t\t\tquality += PROBABILITIES.d;\n\t\t\tdPureness++;\n\t\t}\n\t\tif (traits[parts[i]].r1.class == cls)\n\t\t{\n\t\t\tquality += PROBABILITIES.r1;\n\t\t}\n\t\tif (traits[parts[i]].r2.class == cls)\n\t\t{\n\t\t\tquality += PROBABILITIES.r2;\n\t\t}\n\t}\n\treturn { quality: quality / MAX_QUALITY, pureness: dPureness };\n}\nfunction strMul(str, num)\n{\n\tvar s = \"\";\n\tfor (var i = 0; i < num; i++)\n\t{\n\t\ts += str;\n\t}\n\treturn s;\n}\n\nfunction getAxieInfoMarket(id)\n{\n\tfetch(\"https://axieinfinity.com/graphql-server-v2/graphql?r=freak\", { \"headers\": { \"content-type\": \"application/json\" }, \"body\": \"{\\\"operationName\\\":\\\"GetAxieDetail\\\",\\\"variables\\\":{\\\"axieId\\\":\\\"\" + parseInt(id) + \"\\\"},\\\"query\\\":\\\"query GetAxieDetail($axieId: ID!) {\\\\n  axie(axieId: $axieId) {\\\\n    ...AxieDetail\\\\n    __typename\\\\n  }\\\\n}\\\\n\\\\nfragment AxieDetail on Axie {\\\\n  id\\\\n  name\\\\n  genes\\\\n  owner\\\\n  birthDate\\\\n  bodyShape\\\\n  class\\\\n  sireId\\\\n  sireClass\\\\n  matronId\\\\n  matronClass\\\\n  stage\\\\n  title\\\\n  breedCount\\\\n  level\\\\n  figure {\\\\n    atlas\\\\n    model\\\\n    image\\\\n    __typename\\\\n  }\\\\n  parts {\\\\n    ...AxiePart\\\\n    __typename\\\\n  }\\\\n  stats {\\\\n    ...AxieStats\\\\n    __typename\\\\n  }\\\\n  auction {\\\\n    ...AxieAuction\\\\n    __typename\\\\n  }\\\\n  ownerProfile {\\\\n    name\\\\n    __typename\\\\n  }\\\\n  children {\\\\n    id\\\\n    name\\\\n    class\\\\n    image\\\\n    title\\\\n    stage\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\n\\\\nfragment AxiePart on AxiePart {\\\\n  id\\\\n  name\\\\n  class\\\\n  type\\\\n  stage\\\\n  abilities {\\\\n    ...AxieCardAbility\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\n\\\\nfragment AxieCardAbility on AxieCardAbility {\\\\n  id\\\\n  name\\\\n  attack\\\\n  defense\\\\n  energy\\\\n  description\\\\n  backgroundUrl\\\\n  effectIconUrl\\\\n  __typename\\\\n}\\\\n\\\\nfragment AxieStats on AxieStats {\\\\n  hp\\\\n  speed\\\\n  skill\\\\n  morale\\\\n  __typename\\\\n}\\\\n\\\\nfragment AxieAuction on Auction {\\\\n  startingPrice\\\\n  endingPrice\\\\n  startingTimestamp\\\\n  endingTimestamp\\\\n  duration\\\\n  timeLeft\\\\n  currentPrice\\\\n  currentPriceUSD\\\\n  suggestedPrice\\\\n  seller\\\\n  listingIndex\\\\n  __typename\\\\n}\\\\n\\\"}\", \"method\": \"POST\" })\n\t\t.then(response =>\n\t\t{\n\t\t\tresponse.json().then(result =>\n\t\t\t{\n\t\t\t\tconsole.log(result);\n\t\t\t\tlet axie = result.data.axie;\n\t\t\t\t//axie.pendingExp = axie.battleInfo.pendingExp;\n\t\t\t\tconsole.log(JSON.stringify(axie));\n\n\t\t\t});\n\t\t})\n\t\t.catch(error =>\n\t\t{\n\t\t\tconsole.log(error);\n\t\t});\n}\n\n","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { convert, getAxieBriefList, getAxieBriefListTotal, getBodyParts } from './axies';\nimport { ProgressBar, Container, Row, Col, Tab, Tabs, InputGroup, FormControl } from 'react-bootstrap';\nimport Accordion from 'react-bootstrap/Accordion';\n\nfunction App()\n{\n  const [criteria, setCriteria] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [total, setTotal] = useState(0);\n  const classes = [{ class: 'Beast', checked: false },\n  { class: 'Aquatic', checked: false },\n  { class: 'Plant', checked: false },\n  { class: 'Bird', checked: false },\n  { class: 'Bug', checked: false },\n  { class: 'Reptile', checked: false },\n  { class: 'Mech', checked: false },\n  { class: 'Dawn', checked: false },\n  { class: 'Dusk', checked: false }],\n  stages = [{ name: 'Egg', checked: false ,stage:1},\n  { name: 'Adult', checked: false,stage : 4 },\n];\n\n  useEffect(() =>\n  {\n\n\n  }, []);\n\n  const getAxiesExcel = async (page = 0) =>\n  {\n    var axiesList = [], bp;\n    let totalAxies = await getAxieBriefListTotal(null, 1, \"PriceAsc\", \"Sale\", JSON.parse(criteria.trim()), null),\n      totalPages = Math.ceil(totalAxies / 100) < page ? Math.ceil(totalAxies / 100) : page ?? Math.ceil(totalAxies / 100);\n    setTotal(totalPages);\n    setProgress(0);\n    bp = await getBodyParts();\n    for (var i = 1; i <= totalPages; i++)\n    {\n      setProgress(i);\n      var currentAxie = await getAxieBriefList(null, i, \"PriceAsc\", \"Sale\", JSON.parse(criteria.trim()), bp);\n      if (currentAxie == null || currentAxie == undefined || currentAxie.length == 0)\n      {\n        break;\n      }\n      axiesList = [...axiesList, ...currentAxie];\n    }\n\n    convert(axiesList);\n\n  }\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <Col sm={4}>\n            <Tabs defaultActiveKey=\"Genral\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n              <Tab eventKey=\"Genral\" title=\"Genral\">\n                <Accordion>\n                  <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>Class</Accordion.Header>\n                    <Accordion.Body>\n                      {classes.map((e) => <InputGroup className=\"mb-3\">\n                        <InputGroup.Checkbox\n                          value={e.checked}\n                          onChange={(ev) => { e.checked = ev.target.checked; console.log(classes); }}\n                          aria-label=\"Checkbox for following text input\" />\n                        <InputGroup.Text>{e.class}</InputGroup.Text>\n                      </InputGroup>)}\n                    </Accordion.Body>\n                  </Accordion.Item>\n                  <Accordion.Item eventKey=\"1\">\n                    <Accordion.Header>Stage</Accordion.Header>\n                    <Accordion.Body>\n                    {stages.map((e) => <InputGroup className=\"mb-3\">\n                        <InputGroup.Checkbox\n                          value={e.checked}\n                          onChange={(ev) => { e.checked = ev.target.checked; }}\n                          aria-label=\"Checkbox for following text input\" />\n                        <InputGroup.Text>{e.name}</InputGroup.Text>\n                      </InputGroup>)}\n                    </Accordion.Body>\n                  </Accordion.Item>\n                </Accordion>              </Tab>\n              <Tab eventKey=\"profile\" title=\"Profile\">\n              </Tab>\n              <Tab eventKey=\"contact\" title=\"Contact\" disabled>\n              </Tab>\n            </Tabs>\n\n          </Col>\n          <Col sm={8}>\n            <div>\n              <Row>\n                <Col>\n                  <textarea value={criteria} onChange={(e) => { setCriteria(e.target.value) }} ></textarea>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <button onClick={() => getAxiesExcel()} >export all</button>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12].map((v) => <button value={v} onClick={(e) => getAxiesExcel(e.target.value)}>page :{v}</button>)}\n                </Col>\n              </Row>\n              <Row >\n                <Col>\n                  <ProgressBar now={((progress) / total) * 100} max={100} label={`${((progress) / total) * 100}`} />\n                </Col>\n              </Row>\n            </div>\n          </Col>\n        </Row>\n\n      </Container>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}