{"version":3,"sources":["logo.svg","axies.js","AxieCard.js","App.js","reportWebVitals.js","index.js"],"names":["classGeneMap","geneColorMap","PROBABILITIES","parts","MAX_QUALITY","axies","bodyPartsMap","flatten","data","result","recurse","cur","prop","Object","Array","isArray","i","l","length","isEmpty","p","getAxieBriefListTotal","address","page","sort","auctionType","criteria","bodyParts","a","from","formattedAddress","fetch","JSON","stringify","then","response","json","total","getAxieBriefList","bp","inc","getBodyParts","results","flattenAxies","axie","id","stage","genes","genesToBin","BigInt","traits","getTraits","qp","getQualityAndPureness","class","toLowerCase","quality","pureness","forEach","e","push","catch","error","console","log","r","genesString","toString","str","num","s","strMul","group","groups","slice","cls","bin","getClassFromGroup","region","regionBin","regionGeneMap","getRegionFromGroup","pattern","d","r1","r2","color","getColor","getColorsFromGroup","eyes","getPartsFromGroup","mouth","ears","horn","back","tail","partsClassMap","getPartName","part","binary","trait","skinBinary","binarytraits","mystic","dName","r1Name","r2Name","getPartFromName","traitType","partName","traitId","replace","partId","dPureness","useStyles","makeStyles","theme","root","maxWidth","margin","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","AxieCard","classes","React","useState","expanded","setExpanded","Card","className","href","style","textDecoration","target","CardHeader","Avatar","aria-label","action","IconButton","title","name","subheader","CardMedia","image","CardContent","Typography","variant","component","CardActions","disableSpacing","paragraph","clsx","onClick","aria-expanded","Collapse","in","timeout","unmountOnExit","Row","Col","partsr1name","map","partsr2name","App","criteriaR1R2","setCriteriaR1R2","setCriteria","displayAxies","setDisplayAxies","progress","setProgress","setTotal","checked","useEffect","getAxiesExcel","axiesList","parse","trim","totalAxies","totalPages","Math","ceil","currentAxie","undefined","partsr1","partsr2","filter","ax","findPart","search","e1","requete","el","Container","sm","Tabs","defaultActiveKey","Tab","eventKey","Accordion","Item","Header","Body","InputGroup","Checkbox","value","onChange","ev","Text","disabled","placeholder","setInterval","v","ProgressBar","now","max","label","arrayChunk","row","rowIndex","col","colIndex","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6108b7c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","/* global BigInt */\n\nimport _, { forEach } from 'lodash';\nimport bodyParts from \"./body-parts.json\";\nimport binarytraits from \"./traitmapping.json\";\nimport fetch from 'node-fetch';\nimport { parse } from 'json2csv';\n\nconst observerConfig = { attributes: false, childList: true, subtree: true };\nconst colorMap = {\n\t\"plant\": \"rgb(108, 192, 0)\",\n\t\"reptile\": \"rgb(200, 138, 224)\",\n\t\"beast\": \"rgb(255, 184, 18)\",\n\t\"aquatic\": \"rgb(0, 184, 206)\",\n\t\"bird\": \"rgb(255, 139, 189)\",\n\t\"bug\": \"rgb(255, 83, 65)\"\n}\nconst classGeneMap = { \"0000\": \"beast\", \"0001\": \"bug\", \"0010\": \"bird\", \"0011\": \"plant\", \"0100\": \"aquatic\", \"0101\": \"reptile\", \"1000\": \"???\", \"1001\": \"???\", \"1010\": \"???\" };\nconst typeOrder = { \"patternColor\": 1, \"eyes\": 2, \"mouth\": 3, \"ears\": 4, \"horn\": 5, \"back\": 6, \"tail\": 7 };\nconst geneColorMap = {\n\t\"0000\": { \"0010\": \"ffec51\", \"0011\": \"ffa12a\", \"0100\": \"f0c66e\", \"0110\": \"60afce\" },\n\t\"0001\": { \"0010\": \"ff7183\", \"0011\": \"ff6d61\", \"0100\": \"f74e4e\", },\n\t\"0010\": { \"0010\": \"ff9ab8\", \"0011\": \"ffb4bb\", \"0100\": \"ff778e\" },\n\t\"0011\": { \"0010\": \"ccef5e\", \"0011\": \"efd636\", \"0100\": \"c5ffd9\" },\n\t\"0100\": { \"0010\": \"4cffdf\", \"0011\": \"2de8f2\", \"0100\": \"759edb\", \"0110\": \"ff5a71\" },\n\t\"0101\": { \"0010\": \"fdbcff\", \"0011\": \"ef93ff\", \"0100\": \"f5e1ff\", \"0110\": \"43e27d\" },\n\t//nut hidden_1\n\t\"1000\": { \"0010\": \"D9D9D9\", \"0011\": \"D9D9D9\", \"0100\": \"D9D9D9\", \"0110\": \"D9D9D9\" },\n\t//star hidden_2\n\t\"1001\": { \"0010\": \"D9D9D9\", \"0011\": \"D9D9D9\", \"0100\": \"D9D9D9\", \"0110\": \"D9D9D9\" },\n\t//moon hidden_3\n\t\"1010\": { \"0010\": \"D9D9D9\", \"0011\": \"D9D9D9\", \"0100\": \"D9D9D9\", \"0110\": \"D9D9D9\" }\n};\nconst PROBABILITIES = { d: 0.375, r1: 0.09375, r2: 0.03125 };\nconst parts = [\"eyes\", \"mouth\", \"ears\", \"horn\", \"back\", \"tail\"];\nconst MAX_QUALITY = 6 * (PROBABILITIES.d + PROBABILITIES.r1 + PROBABILITIES.r2);\nconst MAX_RUN_RETRIES = 30;\nconst OPTIONS_MAP = { \"class\": \"classes\", \"part\": \"parts\", \"bodyShape\": \"bodyShapes\", \"stage\": \"stages\", \"mystic\": \"numMystic\" };\nconst SEARCH_PARAMS = [\"class\", \"stage\", \"breedCount\", \"mystic\", \"pureness\", \"region\", \"title\", \"part\", \"bodyShape\", \"hp\", \"speed\", \"skill\", \"morale\"];\nvar axies = {}, totalAxies = 0, axiesList = [];\nvar bodyPartsMap = {};\n\nexport var convert = function (data)\n{\n\n\tconst fields = ['id',\n\t\t'class',\n\t\t'name',\n\t\t'class',\n\t\t'stage',\n\t\t'breedCount',\n\t\t{ value: 'auction.currentPriceUSD', label: 'price' },\n\t\t{ value: 'traits.eyes.d.name', label: \"D-EYES\" },\n\t\t{ value: 'traits.eyes.r1.name', label: \"R1-EYES\" },\n\t\t{ value: 'traits.eyes.r2.name', label: \"R2-EYES\" },\n\t\t{ value: 'traits.ears.d.name', label: \"D-Ears\" },\n\t\t{ value: 'traits.ears.r1.name', label: \"R1-Ears\" },\n\t\t{ value: 'traits.ears.r2.name', label: \"R2-Ears\" },\n\t\t{ value: 'traits.back.d.name', label: \"D-Back\" },\n\t\t{ value: 'traits.back.r1.name', label: \"R1-Back\" },\n\t\t{ value: 'traits.back.r2.name', label: \"R2-Back\" },\n\t\t{ value: 'traits.mouth.d.name', label: \"D-Mouth\" },\n\t\t{ value: 'traits.mouth.r1.name', label: \"R1-Mouth\" },\n\t\t{ value: 'traits.mouth.r2.name', label: \"R2-Mouth\" },\n\t\t{ value: 'traits.horn.d.name', label: \"D-Horn\" },\n\t\t{ value: 'traits.horn.r1.name', label: \"R1-Horn\" },\n\t\t{ value: 'traits.horn.r2.name', label: \"R2-Horn\" },\n\t\t{ value: 'traits.tail.d.name', label: \"D-Tail\" },\n\t\t{ value: 'traits.tail.r1.name', label: \"R1-Tail\" },\n\t\t{ value: 'traits.tail.r2.name', label: \"R2-Tail\" },\n\t\t{ value: 'stats.hp', label: \"Health\" },\n\t\t{ value: 'stats.skill', label: \"Skill\" },\n\t\t{ value: 'stats.morale', label: \"Morale\" },\n\t\t{ value: 'stats.speed', label: \"Speed\" },\n\t];\n\tconst opts = { fields };\n\tvar csv = parse(data, opts);\n\t// Lodash, currently included vi©a a script, is required for this line to work\n\tvar downloadLink = document.createElement(\"a\");\n\tvar blob = new Blob([\"\\ufeff\", csv]);\n\tvar url = URL.createObjectURL(blob);\n\tdownloadLink.href = url;\n\tdownloadLink.text = \"click\"\n\tdownloadLink.download = \"DataDump.csv\";  //Name the file here\n\tdocument.body.appendChild(downloadLink);\n\tdownloadLink.click();\n\tdownloadLink.remove();\n\treturn csv;\n\t// var xls = json2xls(data);\n\t// fs.writeFileSync(filename, xls, 'binary', (err) =>\n\t// {\n\t//     if (err)\n\t//     {\n\t//         console.log(\"writeFileSync :\", err);\n\t//     }\n\t//     console.log(filename + \" file is saved!\");\n\t// });\n}\n\nfunction flatten(data)\n{\n\tvar result = {};\n\tfunction recurse(cur, prop)\n\t{\n\t\tif (Object(cur) !== cur)\n\t\t{\n\t\t\tresult[prop] = cur;\n\t\t} else if (Array.isArray(cur))\n\t\t{\n\t\t\tfor (var i = 0, l = cur.length; i < l; i++)\n\t\t\t{\n\t\t\t\trecurse(cur[i], prop + \"/\" + i + \"/\");\n\t\t\t}\n\t\t\tif (l == 0)\n\t\t\t\tresult[prop] = [];\n\t\t} else\n\t\t{\n\t\t\tvar isEmpty = true;\n\t\t\tfor (var p in cur)\n\t\t\t{\n\t\t\t\tisEmpty = false;\n\t\t\t\trecurse(cur[p], prop ? prop + \".\" + p : p);\n\t\t\t}\n\t\t\tif (isEmpty && prop)\n\t\t\t\tresult[prop] = {};\n\t\t}\n\t}\n\trecurse(data, \"\");\n\treturn result;\n}\n\n\n\n\nexport async function getAxieBriefListTotal(address, page, sort, auctionType, criteria, bodyParts)\n{\n\t//Assume we are at 24 axies per page\n\tif (page < 1) page = 1;\n\tlet from = (page - 1) * 100;\n\tlet formattedAddress = address;\n\tif (formattedAddress != null)\n\t{\n\t\tformattedAddress = \"\\\"\" + address + \"\\\"\";\n\t}\n\n\treturn await fetch(\"https://axieinfinity.com/graphql-server-v2/graphql?r=freak\", {\n\t\t\"headers\": { \"content-type\": \"application/json\" },\n\t\t\"body\": \"{\\\"operationName\\\":\\\"GetAxieBriefList\\\",\\\"variables\\\":{\\\"from\\\":\" + from + \",\\\"size\\\":100,\\\"sort\\\":\\\"\" + sort + \"\\\",\\\"auctionType\\\":\\\"\" + auctionType + \"\\\",\\\"owner\\\":\" + formattedAddress + \",\\\"criteria\\\":\" + JSON.stringify(criteria) + \"},\\\"query\\\":\\\"query GetAxieBriefList($auctionType: AuctionType, $criteria: AxieSearchCriteria, $from: Int, $sort: SortBy, $size: Int, $owner: String) {\\\\n  axies(auctionType: $auctionType, criteria: $criteria, from: $from, sort: $sort, size: $size, owner: $owner) {\\\\n    total\\\\n    results {\\\\n      ...AxieBrief\\\\n      __typename\\\\n    }\\\\n    __typename\\\\n  }\\\\n}\\\\n\\\\nfragment AxieBrief on Axie {\\\\n  id\\\\n  genes\\\\n  owner\\\\n  name\\\\n  stage\\\\n  class\\\\n  breedCount\\\\n  image\\\\n  title\\\\n  stats {\\\\n    ...AxieStats\\\\n    __typename\\\\n  }\\\\n  battleInfo {\\\\n    banned\\\\n    __typename\\\\n  }\\\\n  auction {\\\\n    currentPrice\\\\n    currentPriceUSD\\\\n    __typename\\\\n  }\\\\n  parts {\\\\n    id\\\\n    name\\\\n    class\\\\n    type\\\\n    specialGenes\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\nfragment AxieStats on AxieStats {\\\\n  hp\\\\n  speed\\\\n  skill\\\\n  morale\\\\n  __typename\\\\n}\\\\n\\\\n\\\"}\",\n\t\t\"method\": \"POST\"\n\t})\n\t\t.then(response =>\n\t\t{\n\t\t\treturn response.json();\n\t\t}).then(result =>\n\t\t{\n\t\t\ttotalAxies = result.data.axies.total;\n\t\t\treturn totalAxies;\n\t\t});\n\n}\n\n\nexport async function getAxieBriefList(address, page, sort, auctionType, criteria, bp)\n{\n\t//Assume we are at 24 axies per page\n\tif (page < 1) page = 1;\n\tlet from = (page - 1) * 100;\n\tlet formattedAddress = address;\n\tif (formattedAddress != null)\n\t{\n\t\tformattedAddress = \"\\\"\" + address + \"\\\"\";\n\t}\n\tvar inc=0;\n\tbodyPartsMap = await getBodyParts();\n\tlet r = await fetch(\"https://axieinfinity.com/graphql-server-v2/graphql?r=freak\", {\n\t\t\"headers\": { \"content-type\": \"application/json\" },\n\t\t\"body\": \"{\\\"operationName\\\":\\\"GetAxieBriefList\\\",\\\"variables\\\":{\\\"from\\\":\" + from + \",\\\"size\\\":100,\\\"sort\\\":\\\"\" + sort + \"\\\",\\\"auctionType\\\":\\\"\" + auctionType + \"\\\",\\\"owner\\\":\" + formattedAddress + \",\\\"criteria\\\":\" + JSON.stringify(criteria) + \"},\\\"query\\\":\\\"query GetAxieBriefList($auctionType: AuctionType, $criteria: AxieSearchCriteria, $from: Int, $sort: SortBy, $size: Int, $owner: String) {\\\\n  axies(auctionType: $auctionType, criteria: $criteria, from: $from, sort: $sort, size: $size, owner: $owner) {\\\\n    total\\\\n    results {\\\\n      ...AxieBrief\\\\n      __typename\\\\n    }\\\\n    __typename\\\\n  }\\\\n}\\\\n\\\\nfragment AxieBrief on Axie {\\\\n  id\\\\n  genes\\\\n  owner\\\\n  name\\\\n  stage\\\\n  class\\\\n  breedCount\\\\n  image\\\\n  title\\\\n  stats {\\\\n    ...AxieStats\\\\n    __typename\\\\n  }\\\\n  battleInfo {\\\\n    banned\\\\n    __typename\\\\n  }\\\\n  auction {\\\\n    currentPrice\\\\n    currentPriceUSD\\\\n    __typename\\\\n  }\\\\n  parts {\\\\n    id\\\\n    name\\\\n    class\\\\n    type\\\\n    specialGenes\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\nfragment AxieStats on AxieStats {\\\\n  hp\\\\n  speed\\\\n  skill\\\\n  morale\\\\n  __typename\\\\n}\\\\n\\\\n\\\"}\",\n\t\t\"method\": \"POST\"\n\t})\n\t\t.then(response =>\n\t\t{\n\t\t\treturn response.json();\n\t\t}).then(result =>\n\t\t{\n\t\t\tlet results = result.data.axies.results, flattenAxiesaxies = [], flattenAxies = [];\n\t\t\tfor (let i = 0; i < results.length; i++)\n\t\t\t{\n\t\t\t\tlet axie = results[i];\n\t\t\t\tlet id = axie.id;\n\t\t\t\taxies[id] = axie;\n\t\t\t\tif (axie.stage > 2)\n\t\t\t\t{\n\t\t\t\t\taxies[id].genes = genesToBin(BigInt(axies[id].genes));\n\t\t\t\t\tlet traits = getTraits(axies[id].genes);\n\t\t\t\t\tlet qp = getQualityAndPureness(traits, axies[id].class?.toLowerCase());\n\t\t\t\t\taxies[id].traits = traits;\n\t\t\t\t\taxies[id].quality = qp.quality;\n\t\t\t\t\taxies[id].pureness = qp.pureness;\n\t\t\t\t}\n\t\t\t\tinc++;\n\t\t\t}\n\t\t\tresults.forEach(e =>\n\t\t\t{\n\t\t\t\tflattenAxies.push(flatten(e));\n\t\t\t});\n\t\t\treturn flattenAxies;\n\t\t})\n\t\t.catch(error =>\n\t\t{\n\t\t\tconsole.log(error,inc);\n\t\t});\n\treturn r;\n}\nfunction genesToBin(genes)\n{\n\tvar genesString = genes.toString(2);\n\tgenesString = strMul(\"0\", 256 - genesString.length) + genesString\n\treturn genesString;\n}\nfunction getTraits(genes)\n{\n\tvar groups = [genes.slice(0, 32), genes.slice(32, 64), genes.slice(64, 96), genes.slice(96, 128), genes.slice(128, 160), genes.slice(160, 192), genes.slice(192, 224), genes.slice(224, 256)];\n\tlet cls = getClassFromGroup(groups[0]);\n\tlet region = getRegionFromGroup(groups[0]);\n\tlet pattern = getPatternsFromGroup(groups[1]);\n\tlet color = getColorsFromGroup(groups[1], groups[0].slice(0, 4));\n\tlet eyes = getPartsFromGroup(\"eyes\", groups[2], region);\n\tlet mouth = getPartsFromGroup(\"mouth\", groups[3], region);\n\tlet ears = getPartsFromGroup(\"ears\", groups[4], region);\n\tlet horn = getPartsFromGroup(\"horn\", groups[5], region);\n\tlet back = getPartsFromGroup(\"back\", groups[6], region);\n\tlet tail = getPartsFromGroup(\"tail\", groups[7], region);\n\treturn { cls: cls, region: region, pattern: pattern, color: color, eyes: eyes, mouth: mouth, ears: ears, horn: horn, back: back, tail: tail };\n}\nconst regionGeneMap = { \"00000\": \"global\", \"00001\": \"japan\" };\nfunction getRegionFromGroup(group)\n{\n\tlet regionBin = group.slice(8, 13);\n\tif (regionBin in regionGeneMap)\n\t{\n\t\treturn regionGeneMap[regionBin];\n\t}\n\treturn \"Unknown Region\";\n}\n\nfunction getClassFromGroup(group)\n{\n\tlet bin = group.slice(0, 4);\n\tif (!(bin in classGeneMap))\n\t{\n\t\treturn \"Unknown Class\";\n\t}\n\treturn classGeneMap[bin];\n}\n\nfunction getPatternsFromGroup(group)\n{\n\t//patterns could be 6 bits. use 4 for now\n\treturn { d: group.slice(2, 8), r1: group.slice(8, 14), r2: group.slice(14, 20) };\n}\n\nfunction getColor(bin, cls)\n{\n\tlet color;\n\tif (bin == \"0000\")\n\t{\n\t\tcolor = \"ffffff\";\n\t} else if (bin == \"0001\")\n\t{\n\t\tcolor = \"7a6767\";\n\t} else\n\t{\n\t\tcolor = geneColorMap[cls][bin];\n\t}\n\treturn color;\n}\n\nfunction getColorsFromGroup(group, cls)\n{\n\treturn { d: getColor(group.slice(20, 24), cls), r1: getColor(group.slice(24, 28), cls), r2: getColor(group.slice(28, 32), cls) };\n}\n\n//hack. key: part name + \" \" + part type\nvar partsClassMap = {};\nfunction getPartName(cls, part, region, binary, skinBinary = \"00\")\n{\n\tlet trait;\n\tif (binary in binarytraits[cls][part])\n\t{\n\t\tif (skinBinary == \"11\")\n\t\t{\n\t\t\ttrait = binarytraits[cls][part][binary][\"mystic\"];\n\t\t} else if (skinBinary == \"10\")\n\t\t{\n\t\t\ttrait = binarytraits[cls][part][binary][\"xmas\"];\n\t\t} else if (region in binarytraits[cls][part][binary])\n\t\t{\n\t\t\ttrait = binarytraits[cls][part][binary][region];\n\t\t} else if (\"global\" in binarytraits[cls][part][binary])\n\t\t{\n\t\t\ttrait = binarytraits[cls][part][binary][\"global\"];\n\t\t} else\n\t\t{\n\t\t\ttrait = \"UNKNOWN Regional \" + cls + \" \" + part;\n\t\t}\n\t} else\n\t{\n\t\ttrait = \"UNKNOWN \" + cls + \" \" + part;\n\t}\n\t//return part + \"-\" + trait.toLowerCase().replace(/\\s/g, \"-\");\n\tpartsClassMap[trait + \" \" + part] = cls;\n\treturn trait;\n}\n\nfunction getPartsFromGroup(part, group, region,)\n{\n\tlet skinBinary = group.slice(0, 2);\n\tlet mystic = skinBinary == \"11\";\n\tlet dClass = classGeneMap[group.slice(2, 6)];\n\tlet dBin = group.slice(6, 12);\n\tlet dName = getPartName(dClass, part, region, dBin, skinBinary);\n\n\tlet r1Class = classGeneMap[group.slice(12, 16)];\n\tlet r1Bin = group.slice(16, 22);\n\tlet r1Name = getPartName(r1Class, part, region, r1Bin);\n\n\tlet r2Class = classGeneMap[group.slice(22, 26)];\n\tlet r2Bin = group.slice(26, 32);\n\tlet r2Name = getPartName(r2Class, part, region, r2Bin);\n\n\treturn { d: getPartFromName(part, dName), r1: getPartFromName(part, r1Name), r2: getPartFromName(part, r2Name), mystic: mystic };\n}\nfunction getPartFromName(traitType, partName)\n{\n\tlet traitId = traitType.toLowerCase() + \"-\" + partName.toLowerCase().replace(/\\s/g, \"-\").replace(/[\\?'\\.]/g, \"\");\n\tvar part =bodyPartsMap[traitId];\n\treturn part;\n}\n\nexport async function getBodyParts()\n{\n\n\tconsole.log(\"Failed to get body parts from the API\");\n\t//API is unreliable. fall back to hard-coded local copy.\n\tlet parts = bodyParts;\n\tfor (let i in parts)\n\t{\n\t\tbodyPartsMap[parts[i].partId] = parts[i];\n\t}\n\n\treturn bodyPartsMap;\n}\n\nfunction getQualityAndPureness(traits, cls)\n{\n\tlet quality = 0;\n\tlet dPureness = 0;\n\tfor (let i in parts)\n\t{\n\t\tif (traits[parts[i]].d.class == cls)\n\t\t{\n\t\t\tquality += PROBABILITIES.d;\n\t\t\tdPureness++;\n\t\t}\n\t\tif (traits[parts[i]].r1.class == cls)\n\t\t{\n\t\t\tquality += PROBABILITIES.r1;\n\t\t}\n\t\tif (traits[parts[i]].r2.class == cls)\n\t\t{\n\t\t\tquality += PROBABILITIES.r2;\n\t\t}\n\t}\n\treturn { quality: quality / MAX_QUALITY, pureness: dPureness };\n}\nfunction strMul(str, num)\n{\n\tvar s = \"\";\n\tfor (var i = 0; i < num; i++)\n\t{\n\t\ts += str;\n\t}\n\treturn s;\n}\n\nfunction getAxieInfoMarket(id)\n{\n\tfetch(\"https://axieinfinity.com/graphql-server-v2/graphql?r=freak\", { \"headers\": { \"content-type\": \"application/json\" }, \"body\": \"{\\\"operationName\\\":\\\"GetAxieDetail\\\",\\\"variables\\\":{\\\"axieId\\\":\\\"\" + parseInt(id) + \"\\\"},\\\"query\\\":\\\"query GetAxieDetail($axieId: ID!) {\\\\n  axie(axieId: $axieId) {\\\\n    ...AxieDetail\\\\n    __typename\\\\n  }\\\\n}\\\\n\\\\nfragment AxieDetail on Axie {\\\\n  id\\\\n  name\\\\n  genes\\\\n  owner\\\\n  birthDate\\\\n  bodyShape\\\\n  class\\\\n  sireId\\\\n  sireClass\\\\n  matronId\\\\n  matronClass\\\\n  stage\\\\n  title\\\\n  breedCount\\\\n  level\\\\n  figure {\\\\n    atlas\\\\n    model\\\\n    image\\\\n    __typename\\\\n  }\\\\n  parts {\\\\n    ...AxiePart\\\\n    __typename\\\\n  }\\\\n  stats {\\\\n    ...AxieStats\\\\n    __typename\\\\n  }\\\\n  auction {\\\\n    ...AxieAuction\\\\n    __typename\\\\n  }\\\\n  ownerProfile {\\\\n    name\\\\n    __typename\\\\n  }\\\\n  children {\\\\n    id\\\\n    name\\\\n    class\\\\n    image\\\\n    title\\\\n    stage\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\n\\\\nfragment AxiePart on AxiePart {\\\\n  id\\\\n  name\\\\n  class\\\\n  type\\\\n  stage\\\\n  abilities {\\\\n    ...AxieCardAbility\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\n\\\\nfragment AxieCardAbility on AxieCardAbility {\\\\n  id\\\\n  name\\\\n  attack\\\\n  defense\\\\n  energy\\\\n  description\\\\n  backgroundUrl\\\\n  effectIconUrl\\\\n  __typename\\\\n}\\\\n\\\\nfragment AxieStats on AxieStats {\\\\n  hp\\\\n  speed\\\\n  skill\\\\n  morale\\\\n  __typename\\\\n}\\\\n\\\\nfragment AxieAuction on Auction {\\\\n  startingPrice\\\\n  endingPrice\\\\n  startingTimestamp\\\\n  endingTimestamp\\\\n  duration\\\\n  timeLeft\\\\n  currentPrice\\\\n  currentPriceUSD\\\\n  suggestedPrice\\\\n  seller\\\\n  listingIndex\\\\n  __typename\\\\n}\\\\n\\\"}\", \"method\": \"POST\" })\n\t\t.then(response =>\n\t\t{\n\t\t\tresponse.json().then(result =>\n\t\t\t{\n\t\t\t\tconsole.log(result);\n\t\t\t\tlet axie = result.data.axie;\n\t\t\t\t//axie.pendingExp = axie.battleInfo.pendingExp;\n\t\t\t\tconsole.log(JSON.stringify(axie));\n\n\t\t\t});\n\t\t})\n\t\t.catch(error =>\n\t\t{\n\t\t\tconsole.log(error);\n\t\t});\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { Row, Col } from 'react-bootstrap';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tmaxWidth: 250,\n\t\tmargin: 5\n\t},\n\tmedia: {\n\t\theight: 0,\n\t\tpaddingTop: '56.25%', // 16:9\n\t},\n\texpand: {\n\t\ttransform: 'rotate(0deg)',\n\t\tmarginLeft: 'auto',\n\t\ttransition: theme.transitions.create('transform', {\n\t\t\tduration: theme.transitions.duration.shortest,\n\t\t}),\n\t},\n\texpandOpen: {\n\t\ttransform: 'rotate(180deg)',\n\t},\n\tavatar: {\n\t\tbackgroundColor: red[500],\n\t},\n}));\n\nexport default function AxieCard({ axie })\n{\n\tconst classes = useStyles();\n\tconst [expanded, setExpanded] = React.useState(true);\n\n\tconst handleExpandClick = () =>\n\t{\n\t\tsetExpanded(!expanded);\n\t};\n\n\treturn (\n\t\t<Card className={classes.root}>\n\t\t\t<a href={\"https://marketplace.axieinfinity.com/axie/\" + axie.id} style={{ textDecoration: 'none' }} target='_blank'>\n\t\t\t\t<CardHeader\n\t\t\t\t\tavatar={\n\t\t\t\t\t\t<Avatar aria-label=\"recipe\" className={classes.avatar}>\n\t\t\t\t\t\t\tR\n\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t}\n\t\t\t\t\taction={\n\t\t\t\t\t\t<IconButton aria-label=\"settings\">\n\t\t\t\t\t\t\t<MoreVertIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t}\n\t\t\t\t\ttitle={axie.name}\n\t\t\t\t\tsubheader={\"#\" + axie.id}\n\t\t\t\t/>\n\t\t\t\t<CardMedia\n\t\t\t\t\tclassName={classes.media}\n\t\t\t\t\timage={axie.image}\n\t\t\t\t\ttitle=\"Paella dish\"\n\t\t\t\t/>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n\t\t\t\t\t\t{`HEALTH:${axie['stats.hp']} /MORALE:${axie['stats.morale']}/SPEED:${axie['stats.speed']}/SKILL:${axie['stats.skill']}`}\n\t\t\t\t\t</Typography>\n\t\t\t\t</CardContent>\n\t\t\t</a>\n\t\t\t<CardActions disableSpacing>\n\t\t\t\t<Typography paragraph>{axie['auction.currentPriceUSD'] + '$'}</Typography>\n\t\t\t\t<IconButton\n\t\t\t\t\tclassName={clsx(classes.expand, {\n\t\t\t\t\t\t[classes.expandOpen]: expanded,\n\t\t\t\t\t})}\n\t\t\t\t\tonClick={handleExpandClick}\n\t\t\t\t\taria-expanded={expanded}\n\t\t\t\t\taria-label=\"show more\"\n\t\t\t\t>\n\t\t\t\t\t<ExpandMoreIcon />\n\t\t\t\t</IconButton>\n\t\t\t</CardActions>\n\t\t\t<Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Typography paragraph>Parts:</Typography>\n\t\t\t\t\t<Typography paragraph>\n\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<p> R1</p>\n\t\t\t\t\t\t\t\t{axie.partsr1name.map((a) => <p>{a}</p>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<p> R2</p>\n\t\t\t\t\t\t\t\t{axie.partsr2name.map((a) => <p>{a}</p>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Typography>\n\t\t\t\t</CardContent>\n\t\t\t</Collapse>\n\t\t</Card>\n\t);\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { convert, getAxieBriefList, getAxieBriefListTotal, getBodyParts } from './axies';\nimport { ProgressBar, Container, Row, Col, Tab, Tabs, InputGroup, FormControl, Card } from 'react-bootstrap';\nimport Accordion from 'react-bootstrap/Accordion';\nimport AxieCard from './AxieCard';\nimport arrayChunk from 'lodash.chunk';\n\nfunction App()\n{\n\tconst [criteriaR1R2, setCriteriaR1R2] = useState(null);\n\tconst [criteria, setCriteria] = useState(null);\n\tconst [displayAxies, setDisplayAxies] = useState([]);\n\n\tconst [progress, setProgress] = useState(0);\n\tconst [total, setTotal] = useState(0);\n\tconst classes = [{ class: 'Beast', checked: false },\n\t{ class: 'Aquatic', checked: false },\n\t{ class: 'Plant', checked: false },\n\t{ class: 'Bird', checked: false },\n\t{ class: 'Bug', checked: false },\n\t{ class: 'Reptile', checked: false },\n\t{ class: 'Mech', checked: false },\n\t{ class: 'Dawn', checked: false },\n\t{ class: 'Dusk', checked: false }],\n\t\tstages = [{ name: 'Egg', checked: false, stage: 1 },\n\t\t{ name: 'Adult', checked: false, stage: 4 },\n\t\t];\n\n\tuseEffect(() =>\n\t{\n\n\n\t}, []);\n\n\tconst getAxiesExcel = async (page = 0) =>\n\t{\n\t\tvar axiesList = [], bp;\n\t\tlet totalAxies = await getAxieBriefListTotal(null, 1, \"PriceAsc\", \"Sale\", JSON.parse(criteria.trim()), null),\n\t\t\ttotalPages = Math.ceil(totalAxies / 100) < page ? Math.ceil(totalAxies / 100) : page ?? Math.ceil(totalAxies / 100);\n\t\tsetTotal(totalPages);\n\t\tsetProgress(0);\n\t\tbp = await getBodyParts();\n\t\tfor (var i = 1; i <= totalPages; i++)\n\t\t{\n\t\t\tsetProgress(i);\n\t\t\tvar currentAxie = await getAxieBriefList(null, i, \"PriceAsc\", \"Sale\", JSON.parse(criteria.trim()), bp);\n\t\t\tif (currentAxie == null || currentAxie == undefined || currentAxie.length == 0)\n\t\t\t{\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\taxiesList = [...axiesList, ...currentAxie];\n\t\t}\n\n\t\tlet a = axiesList.map((a) => (\n\t\t\t{\n\t\t\t\t...a,\n\t\t\t\tpartsr1: [\n\t\t\t\t\ta['traits.eyes.r1.partId'],\n\t\t\t\t\ta['traits.ears.r1.partId'],\n\t\t\t\t\ta['traits.back.r1.partId'],\n\t\t\t\t\ta['traits.mouth.r1.partId'],\n\t\t\t\t\ta['traits.horn.r1.partId'],\n\t\t\t\t\ta['traits.tail.r1.partId']],\n\t\t\t\tpartsr2: [\n\t\t\t\t\ta['traits.eyes.r2.partId'],\n\t\t\t\t\ta['traits.ears.r2.partId'],\n\t\t\t\t\ta['traits.back.r2.partId'],\n\t\t\t\t\ta['traits.mouth.r2.partId'],\n\t\t\t\t\ta['traits.horn.r2.partId'],\n\t\t\t\t\ta['traits.tail.r2.partId']],\n\t\t\t\tpartsr1name: [\n\t\t\t\t\ta['traits.back.r1.name'],\n\t\t\t\t\ta['traits.mouth.r1.name'],\n\t\t\t\t\ta['traits.horn.r1.name'],\n\t\t\t\t\ta['traits.tail.r1.name']],\n\t\t\t\tpartsr2name: [\n\t\t\t\t\ta['traits.back.r2.name'],\n\t\t\t\t\ta['traits.mouth.r2.name'],\n\t\t\t\t\ta['traits.horn.r2.name'],\n\t\t\t\t\ta['traits.tail.r2.name']]\n\t\t\t}));\n\t\tvar parts = JSON.parse(criteriaR1R2);\n\n\t\tsetDisplayAxies(a.filter((ax) => findPart(ax.partsr1, parts.r1) && findPart(ax.partsr2, parts.r2)));\n\n\t}\n\n\tconst findPart = (search, p) =>\n\t{\n\t\tlet i = 0;\n\n\t\tp.forEach(e1 =>\n\t\t{\n\t\t\tlet r = filtreTexte(search, e1);\n\t\t\tif (r.length > 0)\n\t\t\t{\n\t\t\t\ti++;\n\t\t\t}\n\t\t});\n\t\treturn i == p.length;\n\t}\n\n\tfunction filtreTexte(arr, requete)\n\t{\n\t\treturn arr.filter(function (el)\n\t\t{\n\t\t\treturn el == requete;\n\t\t})\n\t}\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col sm={4}>\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"Genral\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n\t\t\t\t\t\t\t<Tab eventKey=\"Genral\" title=\"Genral\">\n\t\t\t\t\t\t\t\t<Accordion>\n\t\t\t\t\t\t\t\t\t<Accordion.Item eventKey=\"0\">\n\t\t\t\t\t\t\t\t\t\t<Accordion.Header>Class</Accordion.Header>\n\t\t\t\t\t\t\t\t\t\t<Accordion.Body>\n\t\t\t\t\t\t\t\t\t\t\t{classes.map((e) => <InputGroup className=\"mb-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<InputGroup.Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={e.checked}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(ev) => { e.checked = ev.target.checked; console.log(classes); }}\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Checkbox for following text input\" />\n\t\t\t\t\t\t\t\t\t\t\t\t<InputGroup.Text>{e.class}</InputGroup.Text>\n\t\t\t\t\t\t\t\t\t\t\t</InputGroup>)}\n\t\t\t\t\t\t\t\t\t\t</Accordion.Body>\n\t\t\t\t\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t\t\t\t\t<Accordion.Item eventKey=\"1\">\n\t\t\t\t\t\t\t\t\t\t<Accordion.Header>Stage</Accordion.Header>\n\t\t\t\t\t\t\t\t\t\t<Accordion.Body>\n\t\t\t\t\t\t\t\t\t\t\t{stages.map((e) => <InputGroup className=\"mb-3\">\n\t\t\t\t\t\t\t\t\t\t\t\t<InputGroup.Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={e.checked}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(ev) => { e.checked = ev.target.checked; }}\n\t\t\t\t\t\t\t\t\t\t\t\t\taria-label=\"Checkbox for following text input\" />\n\t\t\t\t\t\t\t\t\t\t\t\t<InputGroup.Text>{e.name}</InputGroup.Text>\n\t\t\t\t\t\t\t\t\t\t\t</InputGroup>)}\n\t\t\t\t\t\t\t\t\t\t</Accordion.Body>\n\t\t\t\t\t\t\t\t\t</Accordion.Item>\n\t\t\t\t\t\t\t\t</Accordion>              </Tab>\n\t\t\t\t\t\t\t<Tab eventKey=\"profile\" title=\"Profile\">\n\t\t\t\t\t\t\t</Tab>\n\t\t\t\t\t\t\t<Tab eventKey=\"contact\" title=\"Contact\" disabled>\n\t\t\t\t\t\t\t</Tab>\n\t\t\t\t\t\t</Tabs>\n\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col sm={8}>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<textarea value={criteriaR1R2} placeholder='r1-r2' onChange={(e) => { setCriteriaR1R2(e.target.value) }} ></textarea>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<textarea value={criteria} onChange={(e) => { setCriteria(e.target.value) }} ></textarea>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<button onClick={() =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tgetAxiesExcel();\n\t\t\t\t\t\t\t\t\t\tsetInterval(getAxiesExcel, 30000);\n\t\t\t\t\t\t\t\t\t}} >export all</button>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t{[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12].map((v) => <button value={v} onClick={(e) =>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tgetAxiesExcel(e.target.value);\n\t\t\t\t\t\t\t\t\t\tsetInterval(() => { getAxiesExcel(e.target.value) }, 300000);\n\t\t\t\t\t\t\t\t\t}}>page :{v}</button>)}\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row >\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<ProgressBar now={((progress) / total) * 100} max={100} label={`${((progress) / total) * 100}`} />\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t</Container>\n\t\t\t<Container>\n\t\t\t\t{\n\t\t\t\t\tarrayChunk(displayAxies, 4).map((row, rowIndex) =>\n\t\t\t\t\t{\n\t\t\t\t\t\treturn (<div key={rowIndex} className=\"row\">{\n\t\t\t\t\t\t\trow.map((col, colIndex) => { return (<div key={colIndex} className=\"col-sm\"><AxieCard axie={col}></AxieCard></div>) })\n\t\t\t\t\t\t}</div>)\n\t\t\t\t\t}\n\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t</Container>\n\t\t</div>\n\n\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}