{"ast":null,"code":"var _jsxFileName = \"/Users/pc/Desktop/axies-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { convert, getAxieBriefList, getAxieBriefListTotal, getBodyParts } from './axies';\nimport { ProgressBar, Container, Row, Col, Tab, Tabs, InputGroup, FormControl } from 'react-bootstrap';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [criteria, setCriteria] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [total, setTotal] = useState(0);\n  const classes = [{\n    class: 'Beast',\n    checked: false\n  }, {\n    class: 'Aquatic',\n    checked: false\n  }, {\n    class: 'Plant',\n    checked: false\n  }, {\n    class: 'Bird',\n    checked: false\n  }, {\n    class: 'Bug',\n    checked: false\n  }, {\n    class: 'Reptile',\n    checked: false\n  }, {\n    class: 'Mech',\n    checked: false\n  }, {\n    class: 'Dawn',\n    checked: false\n  }, {\n    class: 'Dusk',\n    checked: false\n  }];\n  useEffect(() => {}, []);\n\n  const getAxiesExcel = async (page = 0) => {\n    var axiesList = [],\n        bp;\n    let totalAxies = await getAxieBriefListTotal(null, 1, \"PriceAsc\", \"Sale\", JSON.parse(criteria.trim()), null),\n        totalPages = Math.ceil(totalAxies / 100) < page ? Math.ceil(totalAxies / 100) : page !== null && page !== void 0 ? page : Math.ceil(totalAxies / 100);\n    setTotal(totalPages);\n    bp = await getBodyParts();\n    var i = 0;\n\n    for (var i = 0; i < totalPages; i++) {\n      var currentAxie = await getAxieBriefList(null, i, \"PriceAsc\", \"Sale\", JSON.parse(criteria.trim()), bp);\n\n      if (currentAxie == null || currentAxie == undefined || currentAxie.length == 0) {\n        break;\n      }\n\n      axiesList = [...axiesList, ...currentAxie];\n      setProgress(i);\n    }\n\n    convert(axiesList);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            defaultActiveKey: \"profile\",\n            id: \"uncontrolled-tab-example\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"home\",\n              title: \"Genral\",\n              children: [/*#__PURE__*/_jsxDEV(Accordion, {\n                children: [/*#__PURE__*/_jsxDEV(Accordion.Item, {\n                  eventKey: \"0\",\n                  children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                    children: \"Class\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                    children: classes.map(e => /*#__PURE__*/_jsxDEV(InputGroup, {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(InputGroup.Checkbox, {\n                        value: e.checked,\n                        onChange: ev => {\n                          e.checked = ev.target.checked;\n                          console.log(classes);\n                        },\n                        \"aria-label\": \"Checkbox for following text input\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 63,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                        children: e.class\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 67,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 43\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Accordion.Item, {\n                  eventKey: \"1\",\n                  children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                    children: \"Accordion Item #2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                    children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), \"              \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"profile\",\n              title: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"contact\",\n              title: \"Contact\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 8,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: criteria,\n                  onChange: e => {\n                    setCriteria(e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => getAxiesExcel(),\n                  children: \"export all\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12].map(v => /*#__PURE__*/_jsxDEV(\"button\", {\n                  value: v,\n                  onClick: e => getAxiesExcel(e.target.value),\n                  children: [\"page :\", v]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 67\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n                  now: (progress + 1) / total * 100,\n                  max: 100,\n                  label: `${progress / total * 100}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Xo5lmUyvoDWEqJ/2ePe+FqgSLWc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pc/Desktop/axies-react/src/App.js"],"names":["useEffect","useState","convert","getAxieBriefList","getAxieBriefListTotal","getBodyParts","ProgressBar","Container","Row","Col","Tab","Tabs","InputGroup","FormControl","Accordion","App","criteria","setCriteria","progress","setProgress","total","setTotal","classes","class","checked","getAxiesExcel","page","axiesList","bp","totalAxies","JSON","parse","trim","totalPages","Math","ceil","i","currentAxie","undefined","length","map","e","ev","target","console","log","value","v"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { convert, getAxieBriefList, getAxieBriefListTotal, getBodyParts } from './axies';\nimport { ProgressBar, Container, Row, Col, Tab, Tabs, InputGroup, FormControl } from 'react-bootstrap';\nimport Accordion from 'react-bootstrap/Accordion';\n\nfunction App()\n{\n  const [criteria, setCriteria] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [total, setTotal] = useState(0);\n  const classes = [{ class: 'Beast', checked: false },\n  { class: 'Aquatic', checked: false },\n  { class: 'Plant', checked: false },\n  { class: 'Bird', checked: false },\n  { class: 'Bug', checked: false },\n  { class: 'Reptile', checked: false },\n  { class: 'Mech', checked: false },\n  { class: 'Dawn', checked: false },\n  { class: 'Dusk', checked: false }]\n\n  useEffect(() =>\n  {\n\n\n  }, []);\n\n  const getAxiesExcel = async (page = 0) =>\n  {\n    var axiesList = [], bp;\n    let totalAxies = await getAxieBriefListTotal(null, 1, \"PriceAsc\", \"Sale\", JSON.parse(criteria.trim()), null),\n      totalPages = Math.ceil(totalAxies / 100) < page ? Math.ceil(totalAxies / 100) : page ?? Math.ceil(totalAxies / 100);\n    setTotal(totalPages);\n    bp = await getBodyParts();\n    var i = 0;\n    for (var i = 0; i < totalPages; i++)\n    {\n      var currentAxie = await getAxieBriefList(null, i, \"PriceAsc\", \"Sale\", JSON.parse(criteria.trim()), bp);\n      if (currentAxie == null || currentAxie == undefined || currentAxie.length == 0)\n      {\n        break;\n      }\n      axiesList = [...axiesList, ...currentAxie];\n      setProgress(i);\n    }\n\n    convert(axiesList);\n\n  }\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <Col sm={4}>\n            <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n              <Tab eventKey=\"home\" title=\"Genral\">\n                <Accordion>\n                  <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>Class</Accordion.Header>\n                    <Accordion.Body>\n                      {classes.map((e) => <InputGroup className=\"mb-3\">\n                        <InputGroup.Checkbox\n                          value={e.checked}\n                          onChange={(ev) => { e.checked = ev.target.checked; console.log(classes); }}\n                          aria-label=\"Checkbox for following text input\" />\n                        <InputGroup.Text>{e.class}</InputGroup.Text>\n                      </InputGroup>)}\n                    </Accordion.Body>\n                  </Accordion.Item>\n                  <Accordion.Item eventKey=\"1\">\n                    <Accordion.Header>Accordion Item #2</Accordion.Header>\n                    <Accordion.Body>\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n                      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n                      veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n                      commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\n                      velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n                      cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n                      est laborum.\n                    </Accordion.Body>\n                  </Accordion.Item>\n                </Accordion>              </Tab>\n              <Tab eventKey=\"profile\" title=\"Profile\">\n              </Tab>\n              <Tab eventKey=\"contact\" title=\"Contact\" disabled>\n              </Tab>\n            </Tabs>\n\n          </Col>\n          <Col sm={8}>\n            <div>\n              <Row>\n                <Col>\n                  <textarea value={criteria} onChange={(e) => { setCriteria(e.target.value) }} ></textarea>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <button onClick={() => getAxiesExcel()} >export all</button>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12].map((v) => <button value={v} onClick={(e) => getAxiesExcel(e.target.value)}>page :{v}</button>)}\n                </Col>\n              </Row>\n              <Row >\n                <Col>\n                  <ProgressBar now={((progress + 1) / total) * 100} max={100} label={`${((progress) / total) * 100}`} />\n                </Col>\n              </Row>\n            </div>\n          </Col>\n        </Row>\n\n      </Container>\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}