{"ast":null,"code":"var _jsxFileName = \"/Users/pc/Desktop/axies-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { convert, getAxieBriefList, getAxieBriefListTotal, getBodyParts } from './axies';\nimport { ProgressBar, Container, Row, Col, Tab, Tabs, InputGroup, FormControl } from 'react-bootstrap';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [criteria, setCriteria] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [total, setTotal] = useState(0);\n  const classes = [{\n    class: 'Beast',\n    checked: false\n  }, {\n    class: 'Aquatic',\n    checked: false\n  }, {\n    class: 'Plant',\n    checked: false\n  }, {\n    class: 'Bird',\n    checked: false\n  }, {\n    class: 'Bug',\n    checked: false\n  }, {\n    class: 'Reptile',\n    checked: false\n  }, {\n    class: 'Mech',\n    checked: false\n  }, {\n    class: 'Dawn',\n    checked: false\n  }, {\n    class: 'Dusk',\n    checked: false\n  }];\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            defaultActiveKey: \"profile\",\n            id: \"uncontrolled-tab-example\",\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"home\",\n              title: \"Genral\",\n              children: [/*#__PURE__*/_jsxDEV(Accordion, {\n                children: [/*#__PURE__*/_jsxDEV(Accordion.Item, {\n                  eventKey: \"0\",\n                  children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                    children: \"Class\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 37,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                    children: classes.map(e => /*#__PURE__*/_jsxDEV(InputGroup, {\n                      className: \"mb-3\",\n                      children: [/*#__PURE__*/_jsxDEV(InputGroup.Checkbox, {\n                        value: e.checked,\n                        onChange: ev => {\n                          e.checked = ev.target.value;\n                          console.log(classes);\n                        },\n                        \"aria-label\": \"Checkbox for following text input\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 42,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(InputGroup.Text, {\n                        children: e.class\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 46,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 41,\n                      columnNumber: 42\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Accordion.Item, {\n                  eventKey: \"1\",\n                  children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                    children: \"Accordion Item #2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                    children: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 17\n              }, this), \"              \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"profile\",\n              title: \"Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab, {\n              eventKey: \"contact\",\n              title: \"Contact\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 8,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n              now: progress,\n              max: 100,\n              label: `${progress / total * 100}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: criteria,\n              onChange: e => {\n                setCriteria(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: async () => {\n                var axiesList = [],\n                    bp;\n                let totalAxies = await getAxieBriefListTotal(null, 1, \"PriceAsc\", \"Sale\", JSON.parse(criteria.trim()), null);\n                setTotal(Math.ceil(totalAxies / 100));\n                bp = await getBodyParts();\n                var i = 0;\n\n                for (var i = 0; i < Math.ceil(totalAxies / 100); i++) {\n                  var currentAxie = await getAxieBriefList(null, i, \"PriceAsc\", \"Sale\", JSON.parse(criteria.trim()), bp);\n\n                  if (currentAxie == null || currentAxie == undefined || currentAxie.length == 0) {\n                    break;\n                  }\n\n                  axiesList = [...axiesList, ...currentAxie];\n                  setProgress(i);\n                }\n\n                convert(axiesList);\n              },\n              children: \"export\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Xo5lmUyvoDWEqJ/2ePe+FqgSLWc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pc/Desktop/axies-react/src/App.js"],"names":["useEffect","useState","convert","getAxieBriefList","getAxieBriefListTotal","getBodyParts","ProgressBar","Container","Row","Col","Tab","Tabs","InputGroup","FormControl","Accordion","App","criteria","setCriteria","progress","setProgress","total","setTotal","classes","class","checked","map","e","ev","target","value","console","log","axiesList","bp","totalAxies","JSON","parse","trim","Math","ceil","i","currentAxie","undefined","length"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { convert, getAxieBriefList, getAxieBriefListTotal, getBodyParts } from './axies';\nimport { ProgressBar, Container, Row, Col, Tab, Tabs, InputGroup, FormControl } from 'react-bootstrap';\nimport Accordion from 'react-bootstrap/Accordion';\n\nfunction App()\n{\n  const [criteria, setCriteria] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [total, setTotal] = useState(0);\n  const classes = [{ class: 'Beast', checked: false },\n  { class: 'Aquatic', checked: false },\n  { class: 'Plant', checked: false },\n  { class: 'Bird', checked: false },\n  { class: 'Bug', checked: false },\n  { class: 'Reptile', checked: false },\n  { class: 'Mech', checked: false },\n  { class: 'Dawn', checked: false },\n  { class: 'Dusk', checked: false }]\n\n  useEffect(() =>\n  {\n\n\n  }, []);\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <Col sm={4}>\n            <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\n              <Tab eventKey=\"home\" title=\"Genral\">\n                <Accordion>\n                  <Accordion.Item eventKey=\"0\">\n                    <Accordion.Header>Class</Accordion.Header>\n\n\n                    <Accordion.Body>\n                    {  classes.map((e)=> <InputGroup className=\"mb-3\">\n                        <InputGroup.Checkbox\n                          value={e.checked}\n                          onChange={(ev) => {e.checked=ev.target.value;console.log(classes);}}\n                          aria-label=\"Checkbox for following text input\" />\n                        <InputGroup.Text>{e.class}</InputGroup.Text>\n                      </InputGroup>)}\n                    </Accordion.Body>\n                  </Accordion.Item>\n                  <Accordion.Item eventKey=\"1\">\n                    <Accordion.Header>Accordion Item #2</Accordion.Header>\n                    <Accordion.Body>\n                      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n                      tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n                      veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n                      commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\n                      velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat\n                      cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id\n                      est laborum.\n                    </Accordion.Body>\n                  </Accordion.Item>\n                </Accordion>              </Tab>\n              <Tab eventKey=\"profile\" title=\"Profile\">\n              </Tab>\n              <Tab eventKey=\"contact\" title=\"Contact\" disabled>\n              </Tab>\n            </Tabs>\n\n          </Col>\n          <Col sm={8}>\n            <div>\n              <ProgressBar now={progress} max={100} label={`${(progress / total) * 100}`} />\n            </div>\n            <div>\n              <input value={criteria} onChange={(e) => { setCriteria(e.target.value) }} ></input>\n              <button onClick={async () =>\n              {\n                var axiesList = [], bp;\n                let totalAxies = await getAxieBriefListTotal(null, 1, \"PriceAsc\", \"Sale\", JSON.parse(criteria.trim()), null);\n                setTotal(Math.ceil(totalAxies / 100));\n                bp = await getBodyParts();\n                var i = 0;\n                for (var i = 0; i < Math.ceil(totalAxies / 100); i++)\n                {\n                  var currentAxie = await getAxieBriefList(null, i, \"PriceAsc\", \"Sale\", JSON.parse(criteria.trim()), bp);\n                  if (currentAxie == null || currentAxie == undefined || currentAxie.length == 0)\n                  {\n                    break;\n                  }\n                  axiesList = [...axiesList, ...currentAxie];\n                  setProgress(i);\n                }\n\n                convert(axiesList);\n\n              }} >export</button>\n            </div>\n          </Col>\n        </Row>\n\n      </Container>\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}