{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pc/Desktop/axies-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/pc/Desktop/axies-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";/* global BigInt */import _,{forEach}from'lodash';import bodyParts from\"./body-parts.json\";import binarytraits from\"./traitmapping.json\";import fetch from'node-fetch';import{parse}from'json2csv';var observerConfig={attributes:false,childList:true,subtree:true};var colorMap={\"plant\":\"rgb(108, 192, 0)\",\"reptile\":\"rgb(200, 138, 224)\",\"beast\":\"rgb(255, 184, 18)\",\"aquatic\":\"rgb(0, 184, 206)\",\"bird\":\"rgb(255, 139, 189)\",\"bug\":\"rgb(255, 83, 65)\"};var classGeneMap={\"0000\":\"beast\",\"0001\":\"bug\",\"0010\":\"bird\",\"0011\":\"plant\",\"0100\":\"aquatic\",\"0101\":\"reptile\",\"1000\":\"???\",\"1001\":\"???\",\"1010\":\"???\"};var typeOrder={\"patternColor\":1,\"eyes\":2,\"mouth\":3,\"ears\":4,\"horn\":5,\"back\":6,\"tail\":7};var geneColorMap={\"0000\":{\"0010\":\"ffec51\",\"0011\":\"ffa12a\",\"0100\":\"f0c66e\",\"0110\":\"60afce\"},\"0001\":{\"0010\":\"ff7183\",\"0011\":\"ff6d61\",\"0100\":\"f74e4e\"},\"0010\":{\"0010\":\"ff9ab8\",\"0011\":\"ffb4bb\",\"0100\":\"ff778e\"},\"0011\":{\"0010\":\"ccef5e\",\"0011\":\"efd636\",\"0100\":\"c5ffd9\"},\"0100\":{\"0010\":\"4cffdf\",\"0011\":\"2de8f2\",\"0100\":\"759edb\",\"0110\":\"ff5a71\"},\"0101\":{\"0010\":\"fdbcff\",\"0011\":\"ef93ff\",\"0100\":\"f5e1ff\",\"0110\":\"43e27d\"},//nut hidden_1\n\"1000\":{\"0010\":\"D9D9D9\",\"0011\":\"D9D9D9\",\"0100\":\"D9D9D9\",\"0110\":\"D9D9D9\"},//star hidden_2\n\"1001\":{\"0010\":\"D9D9D9\",\"0011\":\"D9D9D9\",\"0100\":\"D9D9D9\",\"0110\":\"D9D9D9\"},//moon hidden_3\n\"1010\":{\"0010\":\"D9D9D9\",\"0011\":\"D9D9D9\",\"0100\":\"D9D9D9\",\"0110\":\"D9D9D9\"}};var PROBABILITIES={d:0.375,r1:0.09375,r2:0.03125};var parts=[\"eyes\",\"mouth\",\"ears\",\"horn\",\"back\",\"tail\"];var MAX_QUALITY=6*(PROBABILITIES.d+PROBABILITIES.r1+PROBABILITIES.r2);var MAX_RUN_RETRIES=30;var OPTIONS_MAP={\"class\":\"classes\",\"part\":\"parts\",\"bodyShape\":\"bodyShapes\",\"stage\":\"stages\",\"mystic\":\"numMystic\"};var SEARCH_PARAMS=[\"class\",\"stage\",\"breedCount\",\"mystic\",\"pureness\",\"region\",\"title\",\"part\",\"bodyShape\",\"hp\",\"speed\",\"skill\",\"morale\"];var axies={},totalAxies=0,axiesList=[];var bodyPartsMap={};export var convert=function convert(data){var fields=['id','class','name','class','stage','breedCount',{value:'auction.currentPriceUSD',label:'price'},{value:'traits.eyes.d.name',label:\"D-EYES\"},{value:'traits.eyes.r1.name',label:\"R1-EYES\"},{value:'traits.eyes.r2.name',label:\"R2-EYES\"},{value:'traits.ears.d.name',label:\"D-Ears\"},{value:'traits.ears.r1.name',label:\"R1-Ears\"},{value:'traits.ears.r2.name',label:\"R2-Ears\"},{value:'traits.back.d.name',label:\"D-Back\"},{value:'traits.back.r1.name',label:\"R1-Back\"},{value:'traits.back.r2.name',label:\"R2-Back\"},{value:'traits.mouth.d.name',label:\"D-Mouth\"},{value:'traits.mouth.r1.name',label:\"R1-Mouth\"},{value:'traits.mouth.r2.name',label:\"R2-Mouth\"},{value:'traits.horn.d.name',label:\"D-Horn\"},{value:'traits.horn.r1.name',label:\"R1-Horn\"},{value:'traits.horn.r2.name',label:\"R2-Horn\"},{value:'traits.tail.d.name',label:\"D-Tail\"},{value:'traits.tail.r1.name',label:\"R1-Tail\"},{value:'traits.tail.r2.name',label:\"R2-Tail\"},{value:'stats.hp',label:\"Health\"},{value:'stats.skill',label:\"Skill\"},{value:'stats.morale',label:\"Morale\"},{value:'stats.speed',label:\"Speed\"}];var opts={fields:fields};var csv=parse(data,opts);// Lodash, currently included viÂ©a a script, is required for this line to work\nvar downloadLink=document.createElement(\"a\");var blob=new Blob([\"\\uFEFF\",csv]);var url=URL.createObjectURL(blob);downloadLink.href=url;downloadLink.text=\"click\";downloadLink.download=\"DataDump.csv\";//Name the file here\ndocument.body.appendChild(downloadLink);downloadLink.click();downloadLink.remove();return csv;// var xls = json2xls(data);\n// fs.writeFileSync(filename, xls, 'binary', (err) =>\n// {\n//     if (err)\n//     {\n//         console.log(\"writeFileSync :\", err);\n//     }\n//     console.log(filename + \" file is saved!\");\n// });\n};function flatten(data){var result={};function recurse(cur,prop){if(Object(cur)!==cur){result[prop]=cur;}else if(Array.isArray(cur)){for(var i=0,l=cur.length;i<l;i++){recurse(cur[i],prop+\"/\"+i+\"/\");}if(l==0)result[prop]=[];}else{var isEmpty=true;for(var p in cur){isEmpty=false;recurse(cur[p],prop?prop+\".\"+p:p);}if(isEmpty&&prop)result[prop]={};}}recurse(data,\"\");return result;}export function getAxieBriefListTotal(_x,_x2,_x3,_x4,_x5,_x6){return _getAxieBriefListTotal.apply(this,arguments);}function _getAxieBriefListTotal(){_getAxieBriefListTotal=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(address,page,sort,auctionType,criteria,bodyParts){var from,formattedAddress;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://Assume we are at 24 axies per page\nif(page<1)page=1;from=(page-1)*100;formattedAddress=address;if(formattedAddress!=null){formattedAddress=\"\\\"\"+address+\"\\\"\";}_context.next=6;return fetch(\"https://axieinfinity.com/graphql-server-v2/graphql?r=freak\",{\"headers\":{\"content-type\":\"application/json\"},\"body\":\"{\\\"operationName\\\":\\\"GetAxieBriefList\\\",\\\"variables\\\":{\\\"from\\\":\"+from+\",\\\"size\\\":100,\\\"sort\\\":\\\"\"+sort+\"\\\",\\\"auctionType\\\":\\\"\"+auctionType+\"\\\",\\\"owner\\\":\"+formattedAddress+\",\\\"criteria\\\":\"+JSON.stringify(criteria)+\"},\\\"query\\\":\\\"query GetAxieBriefList($auctionType: AuctionType, $criteria: AxieSearchCriteria, $from: Int, $sort: SortBy, $size: Int, $owner: String) {\\\\n  axies(auctionType: $auctionType, criteria: $criteria, from: $from, sort: $sort, size: $size, owner: $owner) {\\\\n    total\\\\n    results {\\\\n      ...AxieBrief\\\\n      __typename\\\\n    }\\\\n    __typename\\\\n  }\\\\n}\\\\n\\\\nfragment AxieBrief on Axie {\\\\n  id\\\\n  genes\\\\n  owner\\\\n  name\\\\n  stage\\\\n  class\\\\n  breedCount\\\\n  image\\\\n  title\\\\n  stats {\\\\n    ...AxieStats\\\\n    __typename\\\\n  }\\\\n  battleInfo {\\\\n    banned\\\\n    __typename\\\\n  }\\\\n  auction {\\\\n    currentPrice\\\\n    currentPriceUSD\\\\n    __typename\\\\n  }\\\\n  parts {\\\\n    id\\\\n    name\\\\n    class\\\\n    type\\\\n    specialGenes\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\nfragment AxieStats on AxieStats {\\\\n  hp\\\\n  speed\\\\n  skill\\\\n  morale\\\\n  __typename\\\\n}\\\\n\\\\n\\\"}\",\"method\":\"POST\"}).then(function(response){return response.json();}).then(function(result){totalAxies=result.data.axies.total;return totalAxies;});case 6:return _context.abrupt(\"return\",_context.sent);case 7:case\"end\":return _context.stop();}}},_callee);}));return _getAxieBriefListTotal.apply(this,arguments);}export function getAxieBriefList(_x7,_x8,_x9,_x10,_x11,_x12){return _getAxieBriefList.apply(this,arguments);}function _getAxieBriefList(){_getAxieBriefList=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(address,page,sort,auctionType,criteria,bp){var from,formattedAddress,inc,r;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0://Assume we are at 24 axies per page\nif(page<1)page=1;from=(page-1)*100;formattedAddress=address;if(formattedAddress!=null){formattedAddress=\"\\\"\"+address+\"\\\"\";}inc=0;_context2.next=7;return getBodyParts();case 7:bodyPartsMap=_context2.sent;_context2.next=10;return fetch(\"https://axieinfinity.com/graphql-server-v2/graphql?r=freak\",{\"headers\":{\"content-type\":\"application/json\"},\"body\":\"{\\\"operationName\\\":\\\"GetAxieBriefList\\\",\\\"variables\\\":{\\\"from\\\":\"+from+\",\\\"size\\\":100,\\\"sort\\\":\\\"\"+sort+\"\\\",\\\"auctionType\\\":\\\"\"+auctionType+\"\\\",\\\"owner\\\":\"+formattedAddress+\",\\\"criteria\\\":\"+JSON.stringify(criteria)+\"},\\\"query\\\":\\\"query GetAxieBriefList($auctionType: AuctionType, $criteria: AxieSearchCriteria, $from: Int, $sort: SortBy, $size: Int, $owner: String) {\\\\n  axies(auctionType: $auctionType, criteria: $criteria, from: $from, sort: $sort, size: $size, owner: $owner) {\\\\n    total\\\\n    results {\\\\n      ...AxieBrief\\\\n      __typename\\\\n    }\\\\n    __typename\\\\n  }\\\\n}\\\\n\\\\nfragment AxieBrief on Axie {\\\\n  id\\\\n  genes\\\\n  owner\\\\n  name\\\\n  stage\\\\n  class\\\\n  breedCount\\\\n  image\\\\n  title\\\\n  stats {\\\\n    ...AxieStats\\\\n    __typename\\\\n  }\\\\n  battleInfo {\\\\n    banned\\\\n    __typename\\\\n  }\\\\n  auction {\\\\n    currentPrice\\\\n    currentPriceUSD\\\\n    __typename\\\\n  }\\\\n  parts {\\\\n    id\\\\n    name\\\\n    class\\\\n    type\\\\n    specialGenes\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\nfragment AxieStats on AxieStats {\\\\n  hp\\\\n  speed\\\\n  skill\\\\n  morale\\\\n  __typename\\\\n}\\\\n\\\\n\\\"}\",\"method\":\"POST\"}).then(function(response){return response.json();}).then(function(result){var results=result.data.axies.results,flattenAxiesaxies=[],flattenAxies=[];for(var i=0;i<results.length;i++){var axie=results[i];var id=axie.id;axies[id]=axie;if(axie.stage>2){var _axies$id$class;axies[id].genes=genesToBin(BigInt(axies[id].genes));var traits=getTraits(axies[id].genes);var qp=getQualityAndPureness(traits,(_axies$id$class=axies[id].class)===null||_axies$id$class===void 0?void 0:_axies$id$class.toLowerCase());axies[id].traits=traits;axies[id].quality=qp.quality;axies[id].pureness=qp.pureness;}inc++;}results.forEach(function(e){flattenAxies.push(flatten(e));});console.log(JSON.stringify(flattenAxies.slice(2)));return flattenAxies;}).catch(function(error){console.log(error,inc);});case 10:r=_context2.sent;return _context2.abrupt(\"return\",r);case 12:case\"end\":return _context2.stop();}}},_callee2);}));return _getAxieBriefList.apply(this,arguments);}function genesToBin(genes){var genesString=genes.toString(2);genesString=strMul(\"0\",256-genesString.length)+genesString;return genesString;}function getTraits(genes){var groups=[genes.slice(0,32),genes.slice(32,64),genes.slice(64,96),genes.slice(96,128),genes.slice(128,160),genes.slice(160,192),genes.slice(192,224),genes.slice(224,256)];var cls=getClassFromGroup(groups[0]);var region=getRegionFromGroup(groups[0]);var pattern=getPatternsFromGroup(groups[1]);var color=getColorsFromGroup(groups[1],groups[0].slice(0,4));var eyes=getPartsFromGroup(\"eyes\",groups[2],region);var mouth=getPartsFromGroup(\"mouth\",groups[3],region);var ears=getPartsFromGroup(\"ears\",groups[4],region);var horn=getPartsFromGroup(\"horn\",groups[5],region);var back=getPartsFromGroup(\"back\",groups[6],region);var tail=getPartsFromGroup(\"tail\",groups[7],region);return{cls:cls,region:region,pattern:pattern,color:color,eyes:eyes,mouth:mouth,ears:ears,horn:horn,back:back,tail:tail};}var regionGeneMap={\"00000\":\"global\",\"00001\":\"japan\"};function getRegionFromGroup(group){var regionBin=group.slice(8,13);if(regionBin in regionGeneMap){return regionGeneMap[regionBin];}return\"Unknown Region\";}function getClassFromGroup(group){var bin=group.slice(0,4);if(!(bin in classGeneMap)){return\"Unknown Class\";}return classGeneMap[bin];}function getPatternsFromGroup(group){//patterns could be 6 bits. use 4 for now\nreturn{d:group.slice(2,8),r1:group.slice(8,14),r2:group.slice(14,20)};}function getColor(bin,cls){var color;if(bin==\"0000\"){color=\"ffffff\";}else if(bin==\"0001\"){color=\"7a6767\";}else{color=geneColorMap[cls][bin];}return color;}function getColorsFromGroup(group,cls){return{d:getColor(group.slice(20,24),cls),r1:getColor(group.slice(24,28),cls),r2:getColor(group.slice(28,32),cls)};}//hack. key: part name + \" \" + part type\nvar partsClassMap={};function getPartName(cls,part,region,binary){var skinBinary=arguments.length>4&&arguments[4]!==undefined?arguments[4]:\"00\";var trait;if(binary in binarytraits[cls][part]){if(skinBinary==\"11\"){trait=binarytraits[cls][part][binary][\"mystic\"];}else if(skinBinary==\"10\"){trait=binarytraits[cls][part][binary][\"xmas\"];}else if(region in binarytraits[cls][part][binary]){trait=binarytraits[cls][part][binary][region];}else if(\"global\"in binarytraits[cls][part][binary]){trait=binarytraits[cls][part][binary][\"global\"];}else{trait=\"UNKNOWN Regional \"+cls+\" \"+part;}}else{trait=\"UNKNOWN \"+cls+\" \"+part;}//return part + \"-\" + trait.toLowerCase().replace(/\\s/g, \"-\");\npartsClassMap[trait+\" \"+part]=cls;return trait;}function getPartsFromGroup(part,group,region){var skinBinary=group.slice(0,2);var mystic=skinBinary==\"11\";var dClass=classGeneMap[group.slice(2,6)];var dBin=group.slice(6,12);var dName=getPartName(dClass,part,region,dBin,skinBinary);var r1Class=classGeneMap[group.slice(12,16)];var r1Bin=group.slice(16,22);var r1Name=getPartName(r1Class,part,region,r1Bin);var r2Class=classGeneMap[group.slice(22,26)];var r2Bin=group.slice(26,32);var r2Name=getPartName(r2Class,part,region,r2Bin);return{d:getPartFromName(part,dName),r1:getPartFromName(part,r1Name),r2:getPartFromName(part,r2Name),mystic:mystic};}function getPartFromName(traitType,partName){var traitId=traitType.toLowerCase()+\"-\"+partName.toLowerCase().replace(/\\s/g,\"-\").replace(/[\\?'\\.]/g,\"\");var part=bodyPartsMap[traitId];return part;}export function getBodyParts(){return _getBodyParts.apply(this,arguments);}function _getBodyParts(){_getBodyParts=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var parts,i;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.log(\"Failed to get body parts from the API\");//API is unreliable. fall back to hard-coded local copy.\nparts=bodyParts;for(i in parts){bodyPartsMap[parts[i].partId]=parts[i];}return _context3.abrupt(\"return\",bodyPartsMap);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return _getBodyParts.apply(this,arguments);}function getQualityAndPureness(traits,cls){var quality=0;var dPureness=0;for(var i in parts){if(traits[parts[i]].d.class==cls){quality+=PROBABILITIES.d;dPureness++;}if(traits[parts[i]].r1.class==cls){quality+=PROBABILITIES.r1;}if(traits[parts[i]].r2.class==cls){quality+=PROBABILITIES.r2;}}return{quality:quality/MAX_QUALITY,pureness:dPureness};}function strMul(str,num){var s=\"\";for(var i=0;i<num;i++){s+=str;}return s;}function getAxieInfoMarket(id){fetch(\"https://axieinfinity.com/graphql-server-v2/graphql?r=freak\",{\"headers\":{\"content-type\":\"application/json\"},\"body\":\"{\\\"operationName\\\":\\\"GetAxieDetail\\\",\\\"variables\\\":{\\\"axieId\\\":\\\"\"+parseInt(id)+\"\\\"},\\\"query\\\":\\\"query GetAxieDetail($axieId: ID!) {\\\\n  axie(axieId: $axieId) {\\\\n    ...AxieDetail\\\\n    __typename\\\\n  }\\\\n}\\\\n\\\\nfragment AxieDetail on Axie {\\\\n  id\\\\n  name\\\\n  genes\\\\n  owner\\\\n  birthDate\\\\n  bodyShape\\\\n  class\\\\n  sireId\\\\n  sireClass\\\\n  matronId\\\\n  matronClass\\\\n  stage\\\\n  title\\\\n  breedCount\\\\n  level\\\\n  figure {\\\\n    atlas\\\\n    model\\\\n    image\\\\n    __typename\\\\n  }\\\\n  parts {\\\\n    ...AxiePart\\\\n    __typename\\\\n  }\\\\n  stats {\\\\n    ...AxieStats\\\\n    __typename\\\\n  }\\\\n  auction {\\\\n    ...AxieAuction\\\\n    __typename\\\\n  }\\\\n  ownerProfile {\\\\n    name\\\\n    __typename\\\\n  }\\\\n  children {\\\\n    id\\\\n    name\\\\n    class\\\\n    image\\\\n    title\\\\n    stage\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\n\\\\nfragment AxiePart on AxiePart {\\\\n  id\\\\n  name\\\\n  class\\\\n  type\\\\n  stage\\\\n  abilities {\\\\n    ...AxieCardAbility\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\n\\\\nfragment AxieCardAbility on AxieCardAbility {\\\\n  id\\\\n  name\\\\n  attack\\\\n  defense\\\\n  energy\\\\n  description\\\\n  backgroundUrl\\\\n  effectIconUrl\\\\n  __typename\\\\n}\\\\n\\\\nfragment AxieStats on AxieStats {\\\\n  hp\\\\n  speed\\\\n  skill\\\\n  morale\\\\n  __typename\\\\n}\\\\n\\\\nfragment AxieAuction on Auction {\\\\n  startingPrice\\\\n  endingPrice\\\\n  startingTimestamp\\\\n  endingTimestamp\\\\n  duration\\\\n  timeLeft\\\\n  currentPrice\\\\n  currentPriceUSD\\\\n  suggestedPrice\\\\n  seller\\\\n  listingIndex\\\\n  __typename\\\\n}\\\\n\\\"}\",\"method\":\"POST\"}).then(function(response){response.json().then(function(result){console.log(result);var axie=result.data.axie;//axie.pendingExp = axie.battleInfo.pendingExp;\nconsole.log(JSON.stringify(axie));});}).catch(function(error){console.log(error);});}","map":{"version":3,"sources":["/Users/pc/Desktop/axies-react/src/axies.js"],"names":["_","forEach","bodyParts","binarytraits","fetch","parse","observerConfig","attributes","childList","subtree","colorMap","classGeneMap","typeOrder","geneColorMap","PROBABILITIES","d","r1","r2","parts","MAX_QUALITY","MAX_RUN_RETRIES","OPTIONS_MAP","SEARCH_PARAMS","axies","totalAxies","axiesList","bodyPartsMap","convert","data","fields","value","label","opts","csv","downloadLink","document","createElement","blob","Blob","url","URL","createObjectURL","href","text","download","body","appendChild","click","remove","flatten","result","recurse","cur","prop","Object","Array","isArray","i","l","length","isEmpty","p","getAxieBriefListTotal","address","page","sort","auctionType","criteria","from","formattedAddress","JSON","stringify","then","response","json","total","getAxieBriefList","bp","inc","getBodyParts","results","flattenAxiesaxies","flattenAxies","axie","id","stage","genes","genesToBin","BigInt","traits","getTraits","qp","getQualityAndPureness","class","toLowerCase","quality","pureness","e","push","console","log","slice","catch","error","r","genesString","toString","strMul","groups","cls","getClassFromGroup","region","getRegionFromGroup","pattern","getPatternsFromGroup","color","getColorsFromGroup","eyes","getPartsFromGroup","mouth","ears","horn","back","tail","regionGeneMap","group","regionBin","bin","getColor","partsClassMap","getPartName","part","binary","skinBinary","trait","mystic","dClass","dBin","dName","r1Class","r1Bin","r1Name","r2Class","r2Bin","r2Name","getPartFromName","traitType","partName","traitId","replace","partId","dPureness","str","num","s","getAxieInfoMarket","parseInt"],"mappings":"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","sourcesContent":["/* global BigInt */\n\nimport _, { forEach } from 'lodash';\nimport bodyParts from \"./body-parts.json\";\nimport binarytraits from \"./traitmapping.json\";\nimport fetch from 'node-fetch';\nimport { parse } from 'json2csv';\n\nconst observerConfig = { attributes: false, childList: true, subtree: true };\nconst colorMap = {\n\t\"plant\": \"rgb(108, 192, 0)\",\n\t\"reptile\": \"rgb(200, 138, 224)\",\n\t\"beast\": \"rgb(255, 184, 18)\",\n\t\"aquatic\": \"rgb(0, 184, 206)\",\n\t\"bird\": \"rgb(255, 139, 189)\",\n\t\"bug\": \"rgb(255, 83, 65)\"\n}\nconst classGeneMap = { \"0000\": \"beast\", \"0001\": \"bug\", \"0010\": \"bird\", \"0011\": \"plant\", \"0100\": \"aquatic\", \"0101\": \"reptile\", \"1000\": \"???\", \"1001\": \"???\", \"1010\": \"???\" };\nconst typeOrder = { \"patternColor\": 1, \"eyes\": 2, \"mouth\": 3, \"ears\": 4, \"horn\": 5, \"back\": 6, \"tail\": 7 };\nconst geneColorMap = {\n\t\"0000\": { \"0010\": \"ffec51\", \"0011\": \"ffa12a\", \"0100\": \"f0c66e\", \"0110\": \"60afce\" },\n\t\"0001\": { \"0010\": \"ff7183\", \"0011\": \"ff6d61\", \"0100\": \"f74e4e\", },\n\t\"0010\": { \"0010\": \"ff9ab8\", \"0011\": \"ffb4bb\", \"0100\": \"ff778e\" },\n\t\"0011\": { \"0010\": \"ccef5e\", \"0011\": \"efd636\", \"0100\": \"c5ffd9\" },\n\t\"0100\": { \"0010\": \"4cffdf\", \"0011\": \"2de8f2\", \"0100\": \"759edb\", \"0110\": \"ff5a71\" },\n\t\"0101\": { \"0010\": \"fdbcff\", \"0011\": \"ef93ff\", \"0100\": \"f5e1ff\", \"0110\": \"43e27d\" },\n\t//nut hidden_1\n\t\"1000\": { \"0010\": \"D9D9D9\", \"0011\": \"D9D9D9\", \"0100\": \"D9D9D9\", \"0110\": \"D9D9D9\" },\n\t//star hidden_2\n\t\"1001\": { \"0010\": \"D9D9D9\", \"0011\": \"D9D9D9\", \"0100\": \"D9D9D9\", \"0110\": \"D9D9D9\" },\n\t//moon hidden_3\n\t\"1010\": { \"0010\": \"D9D9D9\", \"0011\": \"D9D9D9\", \"0100\": \"D9D9D9\", \"0110\": \"D9D9D9\" }\n};\nconst PROBABILITIES = { d: 0.375, r1: 0.09375, r2: 0.03125 };\nconst parts = [\"eyes\", \"mouth\", \"ears\", \"horn\", \"back\", \"tail\"];\nconst MAX_QUALITY = 6 * (PROBABILITIES.d + PROBABILITIES.r1 + PROBABILITIES.r2);\nconst MAX_RUN_RETRIES = 30;\nconst OPTIONS_MAP = { \"class\": \"classes\", \"part\": \"parts\", \"bodyShape\": \"bodyShapes\", \"stage\": \"stages\", \"mystic\": \"numMystic\" };\nconst SEARCH_PARAMS = [\"class\", \"stage\", \"breedCount\", \"mystic\", \"pureness\", \"region\", \"title\", \"part\", \"bodyShape\", \"hp\", \"speed\", \"skill\", \"morale\"];\nvar axies = {}, totalAxies = 0, axiesList = [];\nvar bodyPartsMap = {};\n\nexport var convert = function (data)\n{\n\n\tconst fields = ['id',\n\t\t'class',\n\t\t'name',\n\t\t'class',\n\t\t'stage',\n\t\t'breedCount',\n\t\t{ value: 'auction.currentPriceUSD', label: 'price' },\n\t\t{ value: 'traits.eyes.d.name', label: \"D-EYES\" },\n\t\t{ value: 'traits.eyes.r1.name', label: \"R1-EYES\" },\n\t\t{ value: 'traits.eyes.r2.name', label: \"R2-EYES\" },\n\t\t{ value: 'traits.ears.d.name', label: \"D-Ears\" },\n\t\t{ value: 'traits.ears.r1.name', label: \"R1-Ears\" },\n\t\t{ value: 'traits.ears.r2.name', label: \"R2-Ears\" },\n\t\t{ value: 'traits.back.d.name', label: \"D-Back\" },\n\t\t{ value: 'traits.back.r1.name', label: \"R1-Back\" },\n\t\t{ value: 'traits.back.r2.name', label: \"R2-Back\" },\n\t\t{ value: 'traits.mouth.d.name', label: \"D-Mouth\" },\n\t\t{ value: 'traits.mouth.r1.name', label: \"R1-Mouth\" },\n\t\t{ value: 'traits.mouth.r2.name', label: \"R2-Mouth\" },\n\t\t{ value: 'traits.horn.d.name', label: \"D-Horn\" },\n\t\t{ value: 'traits.horn.r1.name', label: \"R1-Horn\" },\n\t\t{ value: 'traits.horn.r2.name', label: \"R2-Horn\" },\n\t\t{ value: 'traits.tail.d.name', label: \"D-Tail\" },\n\t\t{ value: 'traits.tail.r1.name', label: \"R1-Tail\" },\n\t\t{ value: 'traits.tail.r2.name', label: \"R2-Tail\" },\n\t\t{ value: 'stats.hp', label: \"Health\" },\n\t\t{ value: 'stats.skill', label: \"Skill\" },\n\t\t{ value: 'stats.morale', label: \"Morale\" },\n\t\t{ value: 'stats.speed', label: \"Speed\" },\n\t];\n\tconst opts = { fields };\n\tvar csv = parse(data, opts);\n\t// Lodash, currently included viÂ©a a script, is required for this line to work\n\tvar downloadLink = document.createElement(\"a\");\n\tvar blob = new Blob([\"\\ufeff\", csv]);\n\tvar url = URL.createObjectURL(blob);\n\tdownloadLink.href = url;\n\tdownloadLink.text = \"click\"\n\tdownloadLink.download = \"DataDump.csv\";  //Name the file here\n\tdocument.body.appendChild(downloadLink);\n\tdownloadLink.click();\n\tdownloadLink.remove();\n\treturn csv;\n\t// var xls = json2xls(data);\n\t// fs.writeFileSync(filename, xls, 'binary', (err) =>\n\t// {\n\t//     if (err)\n\t//     {\n\t//         console.log(\"writeFileSync :\", err);\n\t//     }\n\t//     console.log(filename + \" file is saved!\");\n\t// });\n}\n\nfunction flatten(data)\n{\n\tvar result = {};\n\tfunction recurse(cur, prop)\n\t{\n\t\tif (Object(cur) !== cur)\n\t\t{\n\t\t\tresult[prop] = cur;\n\t\t} else if (Array.isArray(cur))\n\t\t{\n\t\t\tfor (var i = 0, l = cur.length; i < l; i++)\n\t\t\t{\n\t\t\t\trecurse(cur[i], prop + \"/\" + i + \"/\");\n\t\t\t}\n\t\t\tif (l == 0)\n\t\t\t\tresult[prop] = [];\n\t\t} else\n\t\t{\n\t\t\tvar isEmpty = true;\n\t\t\tfor (var p in cur)\n\t\t\t{\n\t\t\t\tisEmpty = false;\n\t\t\t\trecurse(cur[p], prop ? prop + \".\" + p : p);\n\t\t\t}\n\t\t\tif (isEmpty && prop)\n\t\t\t\tresult[prop] = {};\n\t\t}\n\t}\n\trecurse(data, \"\");\n\treturn result;\n}\n\n\n\n\nexport async function getAxieBriefListTotal(address, page, sort, auctionType, criteria, bodyParts)\n{\n\t//Assume we are at 24 axies per page\n\tif (page < 1) page = 1;\n\tlet from = (page - 1) * 100;\n\tlet formattedAddress = address;\n\tif (formattedAddress != null)\n\t{\n\t\tformattedAddress = \"\\\"\" + address + \"\\\"\";\n\t}\n\n\treturn await fetch(\"https://axieinfinity.com/graphql-server-v2/graphql?r=freak\", {\n\t\t\"headers\": { \"content-type\": \"application/json\" },\n\t\t\"body\": \"{\\\"operationName\\\":\\\"GetAxieBriefList\\\",\\\"variables\\\":{\\\"from\\\":\" + from + \",\\\"size\\\":100,\\\"sort\\\":\\\"\" + sort + \"\\\",\\\"auctionType\\\":\\\"\" + auctionType + \"\\\",\\\"owner\\\":\" + formattedAddress + \",\\\"criteria\\\":\" + JSON.stringify(criteria) + \"},\\\"query\\\":\\\"query GetAxieBriefList($auctionType: AuctionType, $criteria: AxieSearchCriteria, $from: Int, $sort: SortBy, $size: Int, $owner: String) {\\\\n  axies(auctionType: $auctionType, criteria: $criteria, from: $from, sort: $sort, size: $size, owner: $owner) {\\\\n    total\\\\n    results {\\\\n      ...AxieBrief\\\\n      __typename\\\\n    }\\\\n    __typename\\\\n  }\\\\n}\\\\n\\\\nfragment AxieBrief on Axie {\\\\n  id\\\\n  genes\\\\n  owner\\\\n  name\\\\n  stage\\\\n  class\\\\n  breedCount\\\\n  image\\\\n  title\\\\n  stats {\\\\n    ...AxieStats\\\\n    __typename\\\\n  }\\\\n  battleInfo {\\\\n    banned\\\\n    __typename\\\\n  }\\\\n  auction {\\\\n    currentPrice\\\\n    currentPriceUSD\\\\n    __typename\\\\n  }\\\\n  parts {\\\\n    id\\\\n    name\\\\n    class\\\\n    type\\\\n    specialGenes\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\nfragment AxieStats on AxieStats {\\\\n  hp\\\\n  speed\\\\n  skill\\\\n  morale\\\\n  __typename\\\\n}\\\\n\\\\n\\\"}\",\n\t\t\"method\": \"POST\"\n\t})\n\t\t.then(response =>\n\t\t{\n\t\t\treturn response.json();\n\t\t}).then(result =>\n\t\t{\n\t\t\ttotalAxies = result.data.axies.total;\n\t\t\treturn totalAxies;\n\t\t});\n\n}\n\n\nexport async function getAxieBriefList(address, page, sort, auctionType, criteria, bp)\n{\n\t//Assume we are at 24 axies per page\n\tif (page < 1) page = 1;\n\tlet from = (page - 1) * 100;\n\tlet formattedAddress = address;\n\tif (formattedAddress != null)\n\t{\n\t\tformattedAddress = \"\\\"\" + address + \"\\\"\";\n\t}\n\tvar inc=0;\n\tbodyPartsMap = await getBodyParts();\n\tlet r = await fetch(\"https://axieinfinity.com/graphql-server-v2/graphql?r=freak\", {\n\t\t\"headers\": { \"content-type\": \"application/json\" },\n\t\t\"body\": \"{\\\"operationName\\\":\\\"GetAxieBriefList\\\",\\\"variables\\\":{\\\"from\\\":\" + from + \",\\\"size\\\":100,\\\"sort\\\":\\\"\" + sort + \"\\\",\\\"auctionType\\\":\\\"\" + auctionType + \"\\\",\\\"owner\\\":\" + formattedAddress + \",\\\"criteria\\\":\" + JSON.stringify(criteria) + \"},\\\"query\\\":\\\"query GetAxieBriefList($auctionType: AuctionType, $criteria: AxieSearchCriteria, $from: Int, $sort: SortBy, $size: Int, $owner: String) {\\\\n  axies(auctionType: $auctionType, criteria: $criteria, from: $from, sort: $sort, size: $size, owner: $owner) {\\\\n    total\\\\n    results {\\\\n      ...AxieBrief\\\\n      __typename\\\\n    }\\\\n    __typename\\\\n  }\\\\n}\\\\n\\\\nfragment AxieBrief on Axie {\\\\n  id\\\\n  genes\\\\n  owner\\\\n  name\\\\n  stage\\\\n  class\\\\n  breedCount\\\\n  image\\\\n  title\\\\n  stats {\\\\n    ...AxieStats\\\\n    __typename\\\\n  }\\\\n  battleInfo {\\\\n    banned\\\\n    __typename\\\\n  }\\\\n  auction {\\\\n    currentPrice\\\\n    currentPriceUSD\\\\n    __typename\\\\n  }\\\\n  parts {\\\\n    id\\\\n    name\\\\n    class\\\\n    type\\\\n    specialGenes\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\nfragment AxieStats on AxieStats {\\\\n  hp\\\\n  speed\\\\n  skill\\\\n  morale\\\\n  __typename\\\\n}\\\\n\\\\n\\\"}\",\n\t\t\"method\": \"POST\"\n\t})\n\t\t.then(response =>\n\t\t{\n\t\t\treturn response.json();\n\t\t}).then(result =>\n\t\t{\n\t\t\tlet results = result.data.axies.results, flattenAxiesaxies = [], flattenAxies = [];\n\t\t\tfor (let i = 0; i < results.length; i++)\n\t\t\t{\n\t\t\t\tlet axie = results[i];\n\t\t\t\tlet id = axie.id;\n\t\t\t\taxies[id] = axie;\n\t\t\t\tif (axie.stage > 2)\n\t\t\t\t{\n\t\t\t\t\taxies[id].genes = genesToBin(BigInt(axies[id].genes));\n\t\t\t\t\tlet traits = getTraits(axies[id].genes);\n\t\t\t\t\tlet qp = getQualityAndPureness(traits, axies[id].class?.toLowerCase());\n\t\t\t\t\taxies[id].traits = traits;\n\t\t\t\t\taxies[id].quality = qp.quality;\n\t\t\t\t\taxies[id].pureness = qp.pureness;\n\t\t\t\t}\n\t\t\t\tinc++;\n\t\t\t}\n\t\t\tresults.forEach(e =>\n\t\t\t{\n\t\t\t\tflattenAxies.push(flatten(e));\n\t\t\t});\n\t\t\tconsole.log(JSON.stringify(flattenAxies.slice(2)));\n\t\t\treturn flattenAxies;\n\t\t})\n\t\t.catch(error =>\n\t\t{\n\t\t\tconsole.log(error,inc);\n\t\t});\n\treturn r;\n}\nfunction genesToBin(genes)\n{\n\tvar genesString = genes.toString(2);\n\tgenesString = strMul(\"0\", 256 - genesString.length) + genesString\n\treturn genesString;\n}\nfunction getTraits(genes)\n{\n\tvar groups = [genes.slice(0, 32), genes.slice(32, 64), genes.slice(64, 96), genes.slice(96, 128), genes.slice(128, 160), genes.slice(160, 192), genes.slice(192, 224), genes.slice(224, 256)];\n\tlet cls = getClassFromGroup(groups[0]);\n\tlet region = getRegionFromGroup(groups[0]);\n\tlet pattern = getPatternsFromGroup(groups[1]);\n\tlet color = getColorsFromGroup(groups[1], groups[0].slice(0, 4));\n\tlet eyes = getPartsFromGroup(\"eyes\", groups[2], region);\n\tlet mouth = getPartsFromGroup(\"mouth\", groups[3], region);\n\tlet ears = getPartsFromGroup(\"ears\", groups[4], region);\n\tlet horn = getPartsFromGroup(\"horn\", groups[5], region);\n\tlet back = getPartsFromGroup(\"back\", groups[6], region);\n\tlet tail = getPartsFromGroup(\"tail\", groups[7], region);\n\treturn { cls: cls, region: region, pattern: pattern, color: color, eyes: eyes, mouth: mouth, ears: ears, horn: horn, back: back, tail: tail };\n}\nconst regionGeneMap = { \"00000\": \"global\", \"00001\": \"japan\" };\nfunction getRegionFromGroup(group)\n{\n\tlet regionBin = group.slice(8, 13);\n\tif (regionBin in regionGeneMap)\n\t{\n\t\treturn regionGeneMap[regionBin];\n\t}\n\treturn \"Unknown Region\";\n}\n\nfunction getClassFromGroup(group)\n{\n\tlet bin = group.slice(0, 4);\n\tif (!(bin in classGeneMap))\n\t{\n\t\treturn \"Unknown Class\";\n\t}\n\treturn classGeneMap[bin];\n}\n\nfunction getPatternsFromGroup(group)\n{\n\t//patterns could be 6 bits. use 4 for now\n\treturn { d: group.slice(2, 8), r1: group.slice(8, 14), r2: group.slice(14, 20) };\n}\n\nfunction getColor(bin, cls)\n{\n\tlet color;\n\tif (bin == \"0000\")\n\t{\n\t\tcolor = \"ffffff\";\n\t} else if (bin == \"0001\")\n\t{\n\t\tcolor = \"7a6767\";\n\t} else\n\t{\n\t\tcolor = geneColorMap[cls][bin];\n\t}\n\treturn color;\n}\n\nfunction getColorsFromGroup(group, cls)\n{\n\treturn { d: getColor(group.slice(20, 24), cls), r1: getColor(group.slice(24, 28), cls), r2: getColor(group.slice(28, 32), cls) };\n}\n\n//hack. key: part name + \" \" + part type\nvar partsClassMap = {};\nfunction getPartName(cls, part, region, binary, skinBinary = \"00\")\n{\n\tlet trait;\n\tif (binary in binarytraits[cls][part])\n\t{\n\t\tif (skinBinary == \"11\")\n\t\t{\n\t\t\ttrait = binarytraits[cls][part][binary][\"mystic\"];\n\t\t} else if (skinBinary == \"10\")\n\t\t{\n\t\t\ttrait = binarytraits[cls][part][binary][\"xmas\"];\n\t\t} else if (region in binarytraits[cls][part][binary])\n\t\t{\n\t\t\ttrait = binarytraits[cls][part][binary][region];\n\t\t} else if (\"global\" in binarytraits[cls][part][binary])\n\t\t{\n\t\t\ttrait = binarytraits[cls][part][binary][\"global\"];\n\t\t} else\n\t\t{\n\t\t\ttrait = \"UNKNOWN Regional \" + cls + \" \" + part;\n\t\t}\n\t} else\n\t{\n\t\ttrait = \"UNKNOWN \" + cls + \" \" + part;\n\t}\n\t//return part + \"-\" + trait.toLowerCase().replace(/\\s/g, \"-\");\n\tpartsClassMap[trait + \" \" + part] = cls;\n\treturn trait;\n}\n\nfunction getPartsFromGroup(part, group, region,)\n{\n\tlet skinBinary = group.slice(0, 2);\n\tlet mystic = skinBinary == \"11\";\n\tlet dClass = classGeneMap[group.slice(2, 6)];\n\tlet dBin = group.slice(6, 12);\n\tlet dName = getPartName(dClass, part, region, dBin, skinBinary);\n\n\tlet r1Class = classGeneMap[group.slice(12, 16)];\n\tlet r1Bin = group.slice(16, 22);\n\tlet r1Name = getPartName(r1Class, part, region, r1Bin);\n\n\tlet r2Class = classGeneMap[group.slice(22, 26)];\n\tlet r2Bin = group.slice(26, 32);\n\tlet r2Name = getPartName(r2Class, part, region, r2Bin);\n\n\treturn { d: getPartFromName(part, dName), r1: getPartFromName(part, r1Name), r2: getPartFromName(part, r2Name), mystic: mystic };\n}\nfunction getPartFromName(traitType, partName)\n{\n\tlet traitId = traitType.toLowerCase() + \"-\" + partName.toLowerCase().replace(/\\s/g, \"-\").replace(/[\\?'\\.]/g, \"\");\n\tvar part =bodyPartsMap[traitId];\n\treturn part;\n}\n\nexport async function getBodyParts()\n{\n\n\tconsole.log(\"Failed to get body parts from the API\");\n\t//API is unreliable. fall back to hard-coded local copy.\n\tlet parts = bodyParts;\n\tfor (let i in parts)\n\t{\n\t\tbodyPartsMap[parts[i].partId] = parts[i];\n\t}\n\n\treturn bodyPartsMap;\n}\n\nfunction getQualityAndPureness(traits, cls)\n{\n\tlet quality = 0;\n\tlet dPureness = 0;\n\tfor (let i in parts)\n\t{\n\t\tif (traits[parts[i]].d.class == cls)\n\t\t{\n\t\t\tquality += PROBABILITIES.d;\n\t\t\tdPureness++;\n\t\t}\n\t\tif (traits[parts[i]].r1.class == cls)\n\t\t{\n\t\t\tquality += PROBABILITIES.r1;\n\t\t}\n\t\tif (traits[parts[i]].r2.class == cls)\n\t\t{\n\t\t\tquality += PROBABILITIES.r2;\n\t\t}\n\t}\n\treturn { quality: quality / MAX_QUALITY, pureness: dPureness };\n}\nfunction strMul(str, num)\n{\n\tvar s = \"\";\n\tfor (var i = 0; i < num; i++)\n\t{\n\t\ts += str;\n\t}\n\treturn s;\n}\n\nfunction getAxieInfoMarket(id)\n{\n\tfetch(\"https://axieinfinity.com/graphql-server-v2/graphql?r=freak\", { \"headers\": { \"content-type\": \"application/json\" }, \"body\": \"{\\\"operationName\\\":\\\"GetAxieDetail\\\",\\\"variables\\\":{\\\"axieId\\\":\\\"\" + parseInt(id) + \"\\\"},\\\"query\\\":\\\"query GetAxieDetail($axieId: ID!) {\\\\n  axie(axieId: $axieId) {\\\\n    ...AxieDetail\\\\n    __typename\\\\n  }\\\\n}\\\\n\\\\nfragment AxieDetail on Axie {\\\\n  id\\\\n  name\\\\n  genes\\\\n  owner\\\\n  birthDate\\\\n  bodyShape\\\\n  class\\\\n  sireId\\\\n  sireClass\\\\n  matronId\\\\n  matronClass\\\\n  stage\\\\n  title\\\\n  breedCount\\\\n  level\\\\n  figure {\\\\n    atlas\\\\n    model\\\\n    image\\\\n    __typename\\\\n  }\\\\n  parts {\\\\n    ...AxiePart\\\\n    __typename\\\\n  }\\\\n  stats {\\\\n    ...AxieStats\\\\n    __typename\\\\n  }\\\\n  auction {\\\\n    ...AxieAuction\\\\n    __typename\\\\n  }\\\\n  ownerProfile {\\\\n    name\\\\n    __typename\\\\n  }\\\\n  children {\\\\n    id\\\\n    name\\\\n    class\\\\n    image\\\\n    title\\\\n    stage\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\n\\\\nfragment AxiePart on AxiePart {\\\\n  id\\\\n  name\\\\n  class\\\\n  type\\\\n  stage\\\\n  abilities {\\\\n    ...AxieCardAbility\\\\n    __typename\\\\n  }\\\\n  __typename\\\\n}\\\\n\\\\nfragment AxieCardAbility on AxieCardAbility {\\\\n  id\\\\n  name\\\\n  attack\\\\n  defense\\\\n  energy\\\\n  description\\\\n  backgroundUrl\\\\n  effectIconUrl\\\\n  __typename\\\\n}\\\\n\\\\nfragment AxieStats on AxieStats {\\\\n  hp\\\\n  speed\\\\n  skill\\\\n  morale\\\\n  __typename\\\\n}\\\\n\\\\nfragment AxieAuction on Auction {\\\\n  startingPrice\\\\n  endingPrice\\\\n  startingTimestamp\\\\n  endingTimestamp\\\\n  duration\\\\n  timeLeft\\\\n  currentPrice\\\\n  currentPriceUSD\\\\n  suggestedPrice\\\\n  seller\\\\n  listingIndex\\\\n  __typename\\\\n}\\\\n\\\"}\", \"method\": \"POST\" })\n\t\t.then(response =>\n\t\t{\n\t\t\tresponse.json().then(result =>\n\t\t\t{\n\t\t\t\tconsole.log(result);\n\t\t\t\tlet axie = result.data.axie;\n\t\t\t\t//axie.pendingExp = axie.battleInfo.pendingExp;\n\t\t\t\tconsole.log(JSON.stringify(axie));\n\n\t\t\t});\n\t\t})\n\t\t.catch(error =>\n\t\t{\n\t\t\tconsole.log(error);\n\t\t});\n}\n\n"]},"metadata":{},"sourceType":"module"}