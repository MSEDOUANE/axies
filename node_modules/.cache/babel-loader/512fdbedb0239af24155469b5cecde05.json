{"ast":null,"code":"var _jsxFileName = \"/Users/pc/Desktop/axies-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { convert, getAxieBriefList, getAxieBriefListTotal, getBodyParts } from './axies';\nimport { ProgressBar, Container, Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [criteria, setCriteria] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [total, setTotal] = useState(0);\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          sm: 8,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n              animated: true,\n              now: progress,\n              max: total,\n              label: `${progress}/${total}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: criteria,\n              onChange: e => {\n                setCriteria(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: async () => {\n                var axiesList = [],\n                    bp;\n                let totalAxies = await getAxieBriefListTotal(null, 1, \"PriceAsc\", \"Sale\", JSON.parse(criteria.trim()), null);\n                setTotal(totalAxies);\n                bp = await getBodyParts();\n                var i = 0;\n\n                for (var i = 0; i < Math.ceil(totalAxies / 100); i++) {\n                  var currentAxie = await getAxieBriefList(null, i, \"PriceAsc\", \"Sale\", JSON.parse(criteria.trim()), bp);\n\n                  if (currentAxie == null || currentAxie == undefined || currentAxie.length == 0) {\n                    break;\n                  }\n\n                  axiesList = [...axiesList, ...currentAxie];\n                  setProgress(i);\n                }\n\n                convert(axiesList);\n              },\n              children: \"export\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Xo5lmUyvoDWEqJ/2ePe+FqgSLWc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pc/Desktop/axies-react/src/App.js"],"names":["useEffect","useState","convert","getAxieBriefList","getAxieBriefListTotal","getBodyParts","ProgressBar","Container","Row","Col","App","criteria","setCriteria","progress","setProgress","total","setTotal","e","target","value","axiesList","bp","totalAxies","JSON","parse","trim","i","Math","ceil","currentAxie","undefined","length"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { convert, getAxieBriefList, getAxieBriefListTotal, getBodyParts } from './axies';\nimport { ProgressBar, Container, Row, Col } from 'react-bootstrap';\n\nfunction App()\n{\n  const [criteria, setCriteria] = useState(null);\n  const [progress, setProgress] = useState(0);\n  const [total, setTotal] = useState(0);\n\n\n  useEffect(() =>\n  {\n\n\n  }, []);\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <Col sm={8}>\n            <div>\n            <ProgressBar animated now={progress} max={total} label={`${progress}/${total}`} />\n            </div>\n            <div>\n              <input value={criteria} onChange={(e) => { setCriteria(e.target.value) }} ></input>\n              <button onClick={async () =>\n              {\n                var axiesList = [], bp;\n                let totalAxies = await getAxieBriefListTotal(null, 1, \"PriceAsc\", \"Sale\", JSON.parse(criteria.trim()), null);\n                setTotal(totalAxies);\n                bp = await getBodyParts();\n                var i = 0;\n                for (var i = 0; i < Math.ceil(totalAxies / 100); i++)\n                {\n                  var currentAxie = await getAxieBriefList(null, i, \"PriceAsc\", \"Sale\", JSON.parse(criteria.trim()), bp);\n                  if (currentAxie == null || currentAxie == undefined || currentAxie.length == 0)\n                  {\n                    break;\n                  }\n                  axiesList = [...axiesList, ...currentAxie];\n                  setProgress(i);\n                }\n\n                convert(axiesList);\n\n              }} >export</button>\n            </div>\n          </Col>\n        </Row>\n\n      </Container>\n    </div>\n\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}